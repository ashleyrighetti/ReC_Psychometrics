#SzyCovMat #displays the covariance matrix
dfGRMS <- as.data.frame(round(MASS::mvrnorm(n=259, mu = GRMS_M, Sigma = GRMSCovMat, empirical = TRUE),0)) #creates the item level data from the sample size, mean, and covariance matrix
dfGRMS[dfGRMS>5]<-5 #restricts the upperbound of all variables to be 5 or less
dfGRMS[dfGRMS<0]<-0 #resticts the lowerbound of all variable to be 0 or greater
#colMeans(GRMS) #displays column means
#Below is code if you would like and ID number. For this lesson's purposes and ID number would just need to be removed, so I will not include it in the original simulation.
#library(tidyverse)
#dfGRMS <- dfGRMS %>% dplyr::mutate(ID = row_number()) #add ID to each row
#dfGRMS <- dfGRMS%>%dplyr::select(ID, everything())#moving the ID number to the first column; requires
psych::describe(dfGRMS)
#write the simulated data  as a .csv
#write.table(dfGRMS, file="dfGRMS.csv", sep=",", col.names=TRUE, row.names=FALSE)
#bring back the simulated dat from a .csv file
#dfGRMS <- read.csv ("dfGRMS.csv", header = TRUE)
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
#saveRDS(dfGRMS, "dfGRMS.rds")
#bring back the simulated dat from an .rds file
#dfGRMS <- readRDS("dfGRMS.rds")
psych::describe(dfGRMS)
GRMSr <- cor(dfGRMS) #correlation matrix (with the negatively scored item already reversed) created and saved as object
round(GRMSr, 2)
#round(GRMSr[,1:8], 2)
#round(GRMSr[,9:16], 2)
#round(GRMSr[,17:25], 2)
psych::KMO(dfGRMS)
#psych::KMO(GRMSr) #for the KMO function, do not specify sample size if using the matrix form of the data
psych::cortest.bartlett(dfGRMS) #from the raw data
#raw data produces the warning "R was not square, finding R from data." This means nothing other than we fed it raw data and the function is creating a matrix from which to do the analysis.
#psych::cortest.bartlett(GRMSr, n = 259) #if using the matrix, must specify sample size
#det(GRMSr)
det(cor(dfGRMS))#if using the raw data
#grmsPAF1 <- psych::fa(GRMSr, nfactors=10, fm = "pa", max.iter = 100, rotate="none")# using the matrix data and specifying the # of factors.
grmsPAF1 <- psych::fa(dfGRMS, nfactors = 10, fm = "pa", max.iter = 100, rotate = "none")# using raw data and specifying the max number of factors
#I received the warning "maximum iteration exceeded". It gave output, but it's best if we don't get that warning, so I increased it to 100.
grmsPAF1 #this object holds a great deal of information
3.51/25
names(grmsPAF1)
plot(grmsPAF1$values, type = "b") #type = "b" gives us "both" lines and points;  type = "l" gives lines and is relatively worthless
#grmsPAF2 <- psych::fa(GRMSr, nfactors=4, fm = "pa", rotate="none")
grmsPAF2 <- psych::fa(dfGRMS, nfactors = 4, fm = "pa", rotate = "none") #can copy prior script, but change nfactors and object name
grmsPAF2
names(grmsPAF2)
mean(grmsPAF2$communality)
#sum(grmsPAF2$communality) #checking my work by calculating the sum and dividing by 25
#9.836131/25
round(psych::factor.model(grmsPAF2$loadings), 3)#produces the reproduced correlation matrix
.41 - .426
round(psych::factor.residuals(GRMSr, grmsPAF2$loadings), 3)
grmsPAF2_resids <- psych::factor.residuals(GRMSr, grmsPAF2$loadings)#first extract the resids
grmsPAF2_resids <- as.matrix(grmsPAF2_resids[upper.tri(grmsPAF2_resids)])#the object has the residuals in a single column
head(grmsPAF2_resids)
large.resid <- abs(grmsPAF2_resids) > 0.05
#large.resid
sum(large.resid)
round(sum(large.resid) / nrow(grmsPAF2_resids),3)
round(sqrt(mean(grmsPAF2_resids^2)), 3)
hist(grmsPAF2_resids)
#grmsPAF2ORTH <- psych::fa(GRMSr, nfactors = 4, fm = "pa", rotate = "varimax")
grmsPAF2ORTH <- psych::fa(dfGRMS, nfactors = 4, fm = "pa", rotate = "varimax")
grmsPAF2ORTH
grmsPAF2_table <- psych::print.psych(grmsPAF2ORTH, cut = 0.3, sort = TRUE)
psych::fa.diagram(grmsPAF2ORTH)
#names(grmsPAF2ORTH)
pafORTH_table <- round(grmsPAF2ORTH$loadings,3)
write.table(pafORTH_table, file="pafORTH_table.csv", sep=",", col.names=TRUE, row.names=FALSE)
pafORTH_table
#grmsPAF2obl <- psych::fa(GRMSr, nfactors = 4, fm = "pa", rotate = "oblimin")
grmsPAF2obl <- psych::fa(dfGRMS, nfactors = 4, fm = "pa", rotate = "oblimin")
grmsPAF2obl
psych::print.psych(grmsPAF2obl, cut = 0.3, sort=TRUE)
grmsPAF2obl$loadings %*% grmsPAF2obl$Phi
#Field's function to produce the structure matrix
factor.structure <- function(fa, cut = 0.2, decimals = 2){
structure.matrix <- psych::fa.sort(fa$loadings %*% fa$Phi)
structure.matrix <- data.frame(ifelse(abs(structure.matrix) < cut, "", round(structure.matrix, decimals)))
return(structure.matrix)
}
factor.structure(grmsPAF2obl, cut = 0.3)
#in all of this, don't forget to be specifiying the datset that has the reverse-coded item replaced
grmsPAF2obl <- psych::fa(dfGRMS, nfactors = 4, fm = "pa", rotate = "oblimin", scores = TRUE)
head(grmsPAF2obl$scores, 10) #shows us only the first 10 (of N = 2571)
set.seed(211023)
AMS_Imat <- matrix(c(.74, .75, .65, .58, .62, .01, .05, -.08, .00, .03, .01, .04, .25, -.06, -.02, .11, .18, .25, .26, .14,
-.03, .00, .20, -.07, .15, .71, .52, .47, .02, .04, .00, -.01, .01, -.18, .07, .14, -.17, .05, -.12,.16,
.11, -.07, -.03, .20, .03, .00, .07, .15, .91, .85, .64, .56, .42, .04, .04, -.15, .03, .13, .07, .14,
-.12, .06, .16, -.01, .02, -.07, .05, .20, -.01, .01, .19, .16, .21, .89, .73, .70, .46, .41, .40, .32), ncol=4) #primary factor loadings for the four factors taken from Table 2 of the manuscript
rownames(AMS_Imat) <- c("Help1", "Help2", "Help3", "Help4", "Help5", "Min1", "Min2", "Min3", "Pers1", "Pers2", "Pers3", "Pers4", "Pers5", "Oth1", "Oth2", "Oth3", "Oth4", "Oth5","Oth6", "Oth7") #variable names for the items
colnames(AMS_Imat) <- c("Helplessness", "Minimization", "Personhood", "Otherization") #component (subscale) names
AMS_ICorMat <- AMS_Imat %*% t(AMS_Imat) #create the correlation matrix via some matrix algebra
diag(AMS_ICorMat) <- 1
#SzyCorMat #prints the correlation matrix
AMS_iM <- c(1.95, 1.74, 2.11, 1.61, 2.13, 3.28, 3.02, 2.09, 1.63, 1.43, 1.48, 1.44, 1.71, .89, 1.35, 1.06, 1.39, 1.15, .91, 1.42) #item means from Table 2
AMS_iSD <- c(1.54, 1.56, 1.52, 1.61, 1.64, 1.85, 1.54, 1.82, 1.56, 1.51, 1.60, 1.64, 1.55, 1.34, 1.46, 1.50, 1.63, 1.42, 1.29, 1.52) #item standard deviations from Table 2
AMS_ICovMat <- AMS_iSD %*% t(AMS_iSD) * AMS_ICorMat #creates a covariance matrix (with more matrix algebra) from the correlation matrix
dfAMSi <- as.data.frame(round(MASS::mvrnorm(n=833, mu = AMS_iM, Sigma = AMS_ICovMat, empirical = TRUE),0)) #creates the item level data from the sample size, mean, and covariance matrix; wrapped in commands to round to 0 decimal places and format as a df
dfAMSi[dfAMSi>5]<-5 #restricts the upperbound of all variables to be 5 or less
dfAMSi[dfAMSi<0]<-0 #resticts the lowerbound of all variable to be 0 or greater
#Scoring the AMS
AMS_vars <- c("Help1", "Help2", "Help3", "Help4", "Help5", "Min1", "Min2", "Min3", "Pers1", "Pers2", "Pers3", "Pers4", "Pers5", "Oth1", "Oth2", "Oth3", "Oth4", "Oth5","Oth6", "Oth7")
dfAMSi$AMSm <- sjstats::mean_n(dfAMSi[,AMS_vars], .80)#Even though our simulation resulted in no missingness, I like to let the "score if there is <80% missing" script to ride along. It doesn't hurt anything
#Rank ordering the AMSm scores (i.e., mean of AMS) and assigning groups
dfAMSi$Rank <- rank(dfAMSi$AMSm)
library(tidyverse) #opening this package so I can pipe
dfAMSi <- dfAMSi %>%
mutate(Severity = case_when(
Rank <= 548 ~"Mild",
Rank >548 ~"Severe"
))
dfAMSi[,'Severity'] <- as.factor(dfAMSi[,'Severity'])#making it a factor
#Checking to see if the counts are right
#dfAMSi %>%
#count(Severity) #Given the ties among ranks, we end up with 537 in the mild condition and 296 in the severe condition; we'll go with it
#Below is code if you would like an ID number for each case. Expecially at first, the ID number would just need to be removed, so I will not include it in the original simulation. We will add it later.
#library(tidyverse)
#dfAMSi <- dfAMSi %>% dplyr::mutate(ID = row_number()) #add ID to each row
#dfAMSi <- dfAMSi %>%dplyr::select(ID, everything())#moving the ID number to the first column; requires
psych::describe(dfAMSi)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
set.seed(211023)
AMS_Imat <- matrix(c(.74, .75, .65, .58, .62, .01, .05, -.08, .00, .03, .01, .04, .25, -.06, -.02, .11, .18, .25, .26, .14,
-.03, .00, .20, -.07, .15, .71, .52, .47, .02, .04, .00, -.01, .01, -.18, .07, .14, -.17, .05, -.12,.16,
.11, -.07, -.03, .20, .03, .00, .07, .15, .91, .85, .64, .56, .42, .04, .04, -.15, .03, .13, .07, .14,
-.12, .06, .16, -.01, .02, -.07, .05, .20, -.01, .01, .19, .16, .21, .89, .73, .70, .46, .41, .40, .32), ncol=4) #primary factor loadings for the four factors taken from Table 2 of the manuscript
rownames(AMS_Imat) <- c("Help1", "Help2", "Help3", "Help4", "Help5", "Min1", "Min2", "Min3", "Pers1", "Pers2", "Pers3", "Pers4", "Pers5", "Oth1", "Oth2", "Oth3", "Oth4", "Oth5","Oth6", "Oth7") #variable names for the items
colnames(AMS_Imat) <- c("Helplessness", "Minimization", "Personhood", "Otherization") #component (subscale) names
AMS_ICorMat <- AMS_Imat %*% t(AMS_Imat) #create the correlation matrix via some matrix algebra
diag(AMS_ICorMat) <- 1
#SzyCorMat #prints the correlation matrix
AMS_iM <- c(1.95, 1.74, 2.11, 1.61, 2.13, 3.28, 3.02, 2.09, 1.63, 1.43, 1.48, 1.44, 1.71, .89, 1.35, 1.06, 1.39, 1.15, .91, 1.42) #item means from Table 2
AMS_iSD <- c(1.54, 1.56, 1.52, 1.61, 1.64, 1.85, 1.54, 1.82, 1.56, 1.51, 1.60, 1.64, 1.55, 1.34, 1.46, 1.50, 1.63, 1.42, 1.29, 1.52) #item standard deviations from Table 2
AMS_ICovMat <- AMS_iSD %*% t(AMS_iSD) * AMS_ICorMat #creates a covariance matrix (with more matrix algebra) from the correlation matrix
dfAMSi <- as.data.frame(round(MASS::mvrnorm(n=833, mu = AMS_iM, Sigma = AMS_ICovMat, empirical = TRUE),0)) #creates the item level data from the sample size, mean, and covariance matrix; wrapped in commands to round to 0 decimal places and format as a df
dfAMSi[dfAMSi>5]<-5 #restricts the upperbound of all variables to be 5 or less
dfAMSi[dfAMSi<0]<-0 #resticts the lowerbound of all variable to be 0 or greater
#Scoring the AMS
AMS_vars <- c("Help1", "Help2", "Help3", "Help4", "Help5", "Min1", "Min2", "Min3", "Pers1", "Pers2", "Pers3", "Pers4", "Pers5", "Oth1", "Oth2", "Oth3", "Oth4", "Oth5","Oth6", "Oth7")
dfAMSi$AMSm <- sjstats::mean_n(dfAMSi[,AMS_vars], .80)#Even though our simulation resulted in no missingness, I like to let the "score if there is <80% missing" script to ride along. It doesn't hurt anything
#Rank ordering the AMSm scores (i.e., mean of AMS) and assigning groups
dfAMSi$Rank <- rank(dfAMSi$AMSm)
library(tidyverse) #opening this package so I can pipe
dfAMSi <- dfAMSi %>%
mutate(Severity = case_when(
Rank <= 548 ~"Mild",
Rank >548 ~"Severe"
))
dfAMSi[,'Severity'] <- as.factor(dfAMSi[,'Severity'])#making it a factor
#Checking to see if the counts are right
#dfAMSi %>%
#count(Severity) #Given the ties among ranks, we end up with 537 in the mild condition and 296 in the severe condition; we'll go with it
#Below is code if you would like an ID number for each case. Expecially at first, the ID number would just need to be removed, so I will not include it in the original simulation. We will add it later.
#library(tidyverse)
#dfAMSi <- dfAMSi %>% dplyr::mutate(ID = row_number()) #add ID to each row
#dfAMSi <- dfAMSi %>%dplyr::select(ID, everything())#moving the ID number to the first column; requires
View(dfAMSi)
psych::describe(dfAMSi)
AMS4CorrMod <-  '
Helplessness =~ Help1 + Help2 + Help3 + Help4 + Help5
Minimization =~ Min1 + Min2 + Min3
DenialPersonhood =~ Pers1 + Pers2 + Pers3 + Pers4 + Pers5
Otherization =~ Oth1 + Oth2 + Oth3 + Oth4 + Oth5 + Oth6 + Oth7
'
AMS4CorrFit <- lavaan::cfa(AMS4CorrMod, data = dfAMSi)
lavaan::summary(AMS4CorrFit, fit.measures = TRUE, standardized = TRUE)
#item labels
#I took out commas internal to the items because the comma causes the text to split across columns in the exported .csv
AMSv1 <- c(Help1 = "People feel they need to do something to help me because I have a disability", Help2 = "People express admiration for me or describe me as inspirational simply because I live with a disability", Help3 = "People express pity for me because I have a disability", Help4 = "People do not expect me to have a job or volunteer activities because I have a disability", Help5 = "People offer me unsolicited unwanted or unneeded help because I have a disability", Min1 = "People are unwilling to accept that I have a disability because I appear able-bodied", Min2 = "People minimize my disability or suggest that it could be worse", Min3 = "People act as if accomodations for my disability are unnecessary", Pers1 = "People don't see me as a whole person because I have a disability", Pers2 = "People act as if I am nothing more than my disability", Pers3 = "People speak to me as if I am a child or do not take me seriously because I have a disability", Pers4 = "People assume I have low intelligence because I have a disability", Pers5 = "Because I have a disability people attempt to make decisions fro me that I could make myself", Oth1 = "People think I should not date or pursue sexual relationships because I have a disability", Oth2 = "People indicate they would not date a person with a disability", Oth3 = "People suggest that I cannot or should not have children because I have a disability", Oth4 = "People stare at me because I have a disability", Oth5 = "Because I have a disability people seem surprised to see me outside my home", Oth6 = "Because I have a disability people assume I have an extraordinary gift or talent",Oth7 = "People suggest that living with a disability would not be a worthwhile existence")
#put it in a table
AMS_Tables <- semTable::semTable(AMS4CorrFit, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"), varLabels = AMSv1, file = "AMS_TAbles", type = "csv", print.results = FALSE)
#By changing print.results = TRUE, you can see the output below
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
#will install the package if not already installed
#if(!require(MASS)){install.packages("MASS")}
#if(!require(sjstats)){install.packages("sjstats")}
#if(!require(psych)){install.packages("psych")}
#if(!require(tidyverse)){install.packages("tidyverse")}
#if(!require(lavaan)){install.packages("lavaan")}
#if(!require(semPlot)){install.packages("semPlot")}
#if(!require(semTable)){install.packages("semTable")}
set.seed(211023)
AMS_Imat <- matrix(c(.74, .75, .65, .58, .62, .01, .05, -.08, .00, .03, .01, .04, .25, -.06, -.02, .11, .18, .25, .26, .14,
-.03, .00, .20, -.07, .15, .71, .52, .47, .02, .04, .00, -.01, .01, -.18, .07, .14, -.17, .05, -.12,.16,
.11, -.07, -.03, .20, .03, .00, .07, .15, .91, .85, .64, .56, .42, .04, .04, -.15, .03, .13, .07, .14,
-.12, .06, .16, -.01, .02, -.07, .05, .20, -.01, .01, .19, .16, .21, .89, .73, .70, .46, .41, .40, .32), ncol=4) #primary factor loadings for the four factors taken from Table 2 of the manuscript
rownames(AMS_Imat) <- c("Help1", "Help2", "Help3", "Help4", "Help5", "Min1", "Min2", "Min3", "Pers1", "Pers2", "Pers3", "Pers4", "Pers5", "Oth1", "Oth2", "Oth3", "Oth4", "Oth5","Oth6", "Oth7") #variable names for the items
colnames(AMS_Imat) <- c("Helplessness", "Minimization", "Personhood", "Otherization") #component (subscale) names
AMS_ICorMat <- AMS_Imat %*% t(AMS_Imat) #create the correlation matrix via some matrix algebra
diag(AMS_ICorMat) <- 1
#SzyCorMat #prints the correlation matrix
AMS_iM <- c(1.95, 1.74, 2.11, 1.61, 2.13, 3.28, 3.02, 2.09, 1.63, 1.43, 1.48, 1.44, 1.71, .89, 1.35, 1.06, 1.39, 1.15, .91, 1.42) #item means from Table 2
AMS_iSD <- c(1.54, 1.56, 1.52, 1.61, 1.64, 1.85, 1.54, 1.82, 1.56, 1.51, 1.60, 1.64, 1.55, 1.34, 1.46, 1.50, 1.63, 1.42, 1.29, 1.52) #item standard deviations from Table 2
AMS_ICovMat <- AMS_iSD %*% t(AMS_iSD) * AMS_ICorMat #creates a covariance matrix (with more matrix algebra) from the correlation matrix
dfAMSi <- as.data.frame(round(MASS::mvrnorm(n=833, mu = AMS_iM, Sigma = AMS_ICovMat, empirical = TRUE),0)) #creates the item level data from the sample size, mean, and covariance matrix; wrapped in commands to round to 0 decimal places and format as a df
dfAMSi[dfAMSi>5]<-5 #restricts the upperbound of all variables to be 5 or less
dfAMSi[dfAMSi<0]<-0 #resticts the lowerbound of all variable to be 0 or greater
#Scoring the AMS
AMS_vars <- c("Help1", "Help2", "Help3", "Help4", "Help5", "Min1", "Min2", "Min3", "Pers1", "Pers2", "Pers3", "Pers4", "Pers5", "Oth1", "Oth2", "Oth3", "Oth4", "Oth5","Oth6", "Oth7")
dfAMSi$AMSm <- sjstats::mean_n(dfAMSi[,AMS_vars], .80)#Even though our simulation resulted in no missingness, I like to let the "score if there is <80% missing" script to ride along. It doesn't hurt anything
#Rank ordering the AMSm scores (i.e., mean of AMS) and assigning groups
dfAMSi$Rank <- rank(dfAMSi$AMSm)
library(tidyverse) #opening this package so I can pipe
dfAMSi <- dfAMSi %>%
mutate(Severity = case_when(
Rank <= 548 ~"Mild",
Rank >548 ~"Severe"
))
dfAMSi[,'Severity'] <- as.factor(dfAMSi[,'Severity'])#making it a factor
#Checking to see if the counts are right
#dfAMSi %>%
#count(Severity) #Given the ties among ranks, we end up with 537 in the mild condition and 296 in the severe condition; we'll go with it
#Below is code if you would like an ID number for each case. Expecially at first, the ID number would just need to be removed, so I will not include it in the original simulation. We will add it later.
#library(tidyverse)
#dfAMSi <- dfAMSi %>% dplyr::mutate(ID = row_number()) #add ID to each row
#dfAMSi <- dfAMSi %>%dplyr::select(ID, everything())#moving the ID number to the first column; requires
psych::describe(dfAMSi)
#write the simulated data  as a .csv
#rite.table(dfAMSi, file="dfAMSi.csv", sep=",", col.names=TRUE, row.names=FALSE)
#bring back the simulated dat from a .csv file
#dfAMSi <- read.csv ("dfAMSi.csv", header = TRUE)
#str(dfAMSi)
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
#saveRDS(dfAMSi, "dfAMSi.rds")
#bring back the simulated dat from an .rds file
#dfAMSi <- readRDS("dfAMSi.rds")
#str(dfAMSi)
#item labels
#I took out commas internal to the items because the comma causes the text to split across columns in the exported .csv
AMSv1 <- c(Help1 = "People feel they need to do something to help me because I have a disability", Help2 = "People express admiration for me or describe me as inspirational simply because I live with a disability", Help3 = "People express pity for me because I have a disability", Help4 = "People do not expect me to have a job or volunteer activities because I have a disability", Help5 = "People offer me unsolicited unwanted or unneeded help because I have a disability", Min1 = "People are unwilling to accept that I have a disability because I appear able-bodied", Min2 = "People minimize my disability or suggest that it could be worse", Min3 = "People act as if accomodations for my disability are unnecessary", Pers1 = "People don't see me as a whole person because I have a disability", Pers2 = "People act as if I am nothing more than my disability", Pers3 = "People speak to me as if I am a child or do not take me seriously because I have a disability", Pers4 = "People assume I have low intelligence because I have a disability", Pers5 = "Because I have a disability people attempt to make decisions fro me that I could make myself", Oth1 = "People think I should not date or pursue sexual relationships because I have a disability", Oth2 = "People indicate they would not date a person with a disability", Oth3 = "People suggest that I cannot or should not have children because I have a disability", Oth4 = "People stare at me because I have a disability", Oth5 = "Because I have a disability people seem surprised to see me outside my home", Oth6 = "Because I have a disability people assume I have an extraordinary gift or talent",Oth7 = "People suggest that living with a disability would not be a worthwhile existence")
#put it in a table
AMS_Tables <- semTable::semTable(AMS4CorrFit, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"), varLabels = AMSv1, file = "AMS_TAbles", type = "csv", print.results = FALSE)
AMS4CorrMod <-  '
Helplessness =~ Help1 + Help2 + Help3 + Help4 + Help5
Minimization =~ Min1 + Min2 + Min3
DenialPersonhood =~ Pers1 + Pers2 + Pers3 + Pers4 + Pers5
Otherization =~ Oth1 + Oth2 + Oth3 + Oth4 + Oth5 + Oth6 + Oth7
'
AMS4CorrFit <- lavaan::cfa(AMS4CorrMod, data = dfAMSi)
lavaan::summary(AMS4CorrFit, fit.measures = TRUE, standardized = TRUE)
#item labels
#I took out commas internal to the items because the comma causes the text to split across columns in the exported .csv
AMSv1 <- c(Help1 = "People feel they need to do something to help me because I have a disability", Help2 = "People express admiration for me or describe me as inspirational simply because I live with a disability", Help3 = "People express pity for me because I have a disability", Help4 = "People do not expect me to have a job or volunteer activities because I have a disability", Help5 = "People offer me unsolicited unwanted or unneeded help because I have a disability", Min1 = "People are unwilling to accept that I have a disability because I appear able-bodied", Min2 = "People minimize my disability or suggest that it could be worse", Min3 = "People act as if accomodations for my disability are unnecessary", Pers1 = "People don't see me as a whole person because I have a disability", Pers2 = "People act as if I am nothing more than my disability", Pers3 = "People speak to me as if I am a child or do not take me seriously because I have a disability", Pers4 = "People assume I have low intelligence because I have a disability", Pers5 = "Because I have a disability people attempt to make decisions fro me that I could make myself", Oth1 = "People think I should not date or pursue sexual relationships because I have a disability", Oth2 = "People indicate they would not date a person with a disability", Oth3 = "People suggest that I cannot or should not have children because I have a disability", Oth4 = "People stare at me because I have a disability", Oth5 = "Because I have a disability people seem surprised to see me outside my home", Oth6 = "Because I have a disability people assume I have an extraordinary gift or talent",Oth7 = "People suggest that living with a disability would not be a worthwhile existence")
#put it in a table
AMS_Tables <- semTable::semTable(AMS4CorrFit, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"), varLabels = AMSv1, file = "AMS_TAbles", type = "csv", print.results = FALSE)
#By changing print.results = TRUE, you can see the output below
View(dfAMSi)
View(dfAMSi)
mild_df <- subset(dfAMSi, Severity == "Mild")
severe_df <- subset(dfAMSi, Severity == "Severe")
MildFit <- lavaan::cfa(AMS4CorrMod, data = mild_df
lavaan::summary(Mild, fit.measures = TRUE, standardized = TRUE)
MildFit <- lavaan::cfa(AMS4CorrMod, data = mild_df)
lavaan::summary(Mild, fit.measures = TRUE, standardized = TRUE)
MildFit <- lavaan::cfa(AMS4CorrMod, data = mild_df)
lavaan::summary(MildFit, fit.measures = TRUE, standardized = TRUE)
SevereFit <- lavaan::cfa(AMS4CorrMod, data = severe_df)
lavaan::summary(SevereFit, fit.measures = TRUE, standardized = TRUE)
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
knitr::opts_chunk$set(echo = TRUE)
#Simulated data -- not real!!!!
GBEdf <- read.csv ("GBE_SIM.csv", head = TRUE, sep = ",")
knitr::opts_chunk$set(echo = TRUE)
#Simulated data -- not real!!!!
GBEdf <- read.csv ("GBE_SIM.csv", head = TRUE, sep = ",")
View(GBEdf)
GBEdf$Wave <- factor(GBEdf$Wave, levels = c("Pre", "Post", "FollowUp"))
GBEdf$Cond <- factor(GBEdf$Cond, levels = c("Control", "Skills", "SkillsContact"))
str(GBEdf)
library(psych)
describeBy(GBE~Wave + Cond, data = GBEdf, mat=TRUE)
library(ggpubr)
CNDwiWV <- ggboxplot(
GBEdf, x = "Wave", y = "GBE",
color = "Cond", palette = "jco", xlab = "Assessment Wave", ylab = "Judgments of Group Based Exclusion"
)
CNDwiWV
WVwiCND <- ggboxplot(
GBEdf, x = "Cond", y = "GBE",
color = "Wave", palette = "jco", xlab = "Treatment Condition", ylab = "Judgments of Group Based Exclusion"
)
WVwiCND
library(rstatix)
GBEdf %>%
group_by(Wave, Cond) %>%
identify_outliers(GBE)
GBEdf %>%
group_by(Wave, Cond) %>%
shapiro_test(GBE)
ggqqplot(GBEdf, "GBE", ggtheme = theme_bw()) +  facet_grid(Wave ~ Cond)
GBEdf %>%
group_by(Wave) %>%
levene_test(GBE ~ Cond)
box_m(GBEdf[, "GBE", drop = FALSE], GBEdf$Cond)
GBE_2way <- anova_test(
data = GBEdf, dv = GBE, wid = ID, #GBEdf is our df, dv is our DV, wid is the participant ID
between = Cond, within = Wave # between is the between-subjects variable, within is the within subjects variable
)
GBE_2way
SimpleCond <- GBEdf %>%
group_by(Cond) %>%
anova_test(dv = GBE, wid = ID, within = Wave) %>%
get_anova_table() %>%
adjust_pvalue(method = "none")
SimpleCond
pwcWVwiGP <- GBEdf %>%
group_by(Cond) %>%
pairwise_t_test(
GBE ~ Wave, paired = TRUE,
p.adjust.method = "holm"
) #%>%
#select(-df, -statistic, -p) # Remove details
pwcWVwiGP
pwcWVwiGP <- pwcWVwiGP %>% add_xy_position(x = "Wave") #pwcWVwiGP were my pairwise comparisons for the simple effect
WVwiCND +  #WVwiCND was the boxplot before I did the ANOVA
stat_pvalue_manual(pwcWVwiGP, tip.length = 0, hide.ns = TRUE) +
labs(
subtitle = get_test_label(GBE_2way, detailed = TRUE), #UE_2way was my omnibus ANOVA model
caption = get_pwc_label(pwcWVwiGP) #and again the pairwise comparisons for the simple effect
)
library(MASS)
write.matrix(pwcWVwiGP, sep = ",", file = "pwcWVwiGP.csv")
set.seed(211023)
AMS_Imat <- matrix(c(.74, .75, .65, .58, .62, .01, .05, -.08, .00, .03, .01, .04, .25, -.06, -.02, .11, .18, .25, .26, .14,
-.03, .00, .20, -.07, .15, .71, .52, .47, .02, .04, .00, -.01, .01, -.18, .07, .14, -.17, .05, -.12,.16,
.11, -.07, -.03, .20, .03, .00, .07, .15, .91, .85, .64, .56, .42, .04, .04, -.15, .03, .13, .07, .14,
-.12, .06, .16, -.01, .02, -.07, .05, .20, -.01, .01, .19, .16, .21, .89, .73, .70, .46, .41, .40, .32), ncol=4) #primary factor loadings for the four factors taken from Table 2 of the manuscript
rownames(AMS_Imat) <- c("Help1", "Help2", "Help3", "Help4", "Help5", "Min1", "Min2", "Min3", "Pers1", "Pers2", "Pers3", "Pers4", "Pers5", "Oth1", "Oth2", "Oth3", "Oth4", "Oth5","Oth6", "Oth7") #variable names for the items
colnames(AMS_Imat) <- c("Helplessness", "Minimization", "Personhood", "Otherization") #component (subscale) names
AMS_ICorMat <- AMS_Imat %*% t(AMS_Imat) #create the correlation matrix via some matrix algebra
diag(AMS_ICorMat) <- 1
#SzyCorMat #prints the correlation matrix
AMS_iM <- c(1.95, 1.74, 2.11, 1.61, 2.13, 3.28, 3.02, 2.09, 1.63, 1.43, 1.48, 1.44, 1.71, .89, 1.35, 1.06, 1.39, 1.15, .91, 1.42) #item means from Table 2
AMS_iSD <- c(1.54, 1.56, 1.52, 1.61, 1.64, 1.85, 1.54, 1.82, 1.56, 1.51, 1.60, 1.64, 1.55, 1.34, 1.46, 1.50, 1.63, 1.42, 1.29, 1.52) #item standard deviations from Table 2
AMS_ICovMat <- AMS_iSD %*% t(AMS_iSD) * AMS_ICorMat #creates a covariance matrix (with more matrix algebra) from the correlation matrix
dfAMSi <- as.data.frame(round(MASS::mvrnorm(n=833, mu = AMS_iM, Sigma = AMS_ICovMat, empirical = TRUE),0)) #creates the item level data from the sample size, mean, and covariance matrix; wrapped in commands to round to 0 decimal places and format as a df
dfAMSi[dfAMSi>5]<-5 #restricts the upperbound of all variables to be 5 or less
dfAMSi[dfAMSi<0]<-0 #resticts the lowerbound of all variable to be 0 or greater
View(dfAMSi)
AMS_vars <- c("Help1", "Help2", "Help3", "Help4", "Help5", "Min1", "Min2", "Min3", "Pers1", "Pers2", "Pers3", "Pers4", "Pers5", "Oth1", "Oth2", "Oth3", "Oth4", "Oth5","Oth6", "Oth7")
dfAMSi$AMSm <- sjstats::mean_n(dfAMSi[,AMS_vars], .80)#Even though our simulation resulted in no missingness, I like to let the "score if there is <80% missing" script to ride along. It doesn't hurt anything
View(dfAMSi)
#Rank ordering the AMSm scores (i.e., mean of AMS) and assigning groups
dfAMSi$Rank <- rank(dfAMSi$AMSm)
library(tidyverse) #opening this package so I can pipe
dfAMSi <- dfAMSi %>%
mutate(Severity = case_when(
Rank <= 548 ~"Mild",
Rank >548 ~"Severe"
))
dfAMSi[,'Severity'] <- as.factor(dfAMSi[,'Severity'])#making it a factor
psych::describe(dfAMSi)
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
saveRDS(dfAMSi, "dfAMSi.rds")
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
#saveRDS(dfAMSi, "dfAMSi.rds")
#bring back the simulated dat from an .rds file
dfAMSi <- readRDS("dfAMSi.rds")
View(dfAMSi)
str(dfAMSi)
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
#saveRDS(dfAMSi, "dfAMSi.rds")
#bring back the simulated dat from an .rds file
dfAMSi <- readRDS("dfAMSi.rds")
str(dfAMSi)
AMS4CorrMod <-  '
Helplessness =~ Help1 + Help2 + Help3 + Help4 + Help5
Minimization =~ Min1 + Min2 + Min3
DenialPersonhood =~ Pers1 + Pers2 + Pers3 + Pers4 + Pers5
Otherization =~ Oth1 + Oth2 + Oth3 + Oth4 + Oth5 + Oth6 + Oth7
'
AMS4CorrFit <- lavaan::cfa(AMS4CorrMod, data = dfAMSi)
lavaan::summary(AMS4CorrFit, fit.measures = TRUE, standardized = TRUE)
AMSv1 <- c(Help1 = "People feel they need to do something to help me because I have a disability", Help2 = "People express admiration for me or describe me as inspirational simply because I live with a disability", Help3 = "People express pity for me because I have a disability", Help4 = "People do not expect me to have a job or volunteer activities because I have a disability", Help5 = "People offer me unsolicited unwanted or unneeded help because I have a disability", Min1 = "People are unwilling to accept that I have a disability because I appear able-bodied", Min2 = "People minimize my disability or suggest that it could be worse", Min3 = "People act as if accomodations for my disability are unnecessary", Pers1 = "People don't see me as a whole person because I have a disability", Pers2 = "People act as if I am nothing more than my disability", Pers3 = "People speak to me as if I am a child or do not take me seriously because I have a disability", Pers4 = "People assume I have low intelligence because I have a disability", Pers5 = "Because I have a disability people attempt to make decisions fro me that I could make myself", Oth1 = "People think I should not date or pursue sexual relationships because I have a disability", Oth2 = "People indicate they would not date a person with a disability", Oth3 = "People suggest that I cannot or should not have children because I have a disability", Oth4 = "People stare at me because I have a disability", Oth5 = "Because I have a disability people seem surprised to see me outside my home", Oth6 = "Because I have a disability people assume I have an extraordinary gift or talent",Oth7 = "People suggest that living with a disability would not be a worthwhile existence")
#put it in a table
AMS_Tables <- semTable::semTable(AMS4CorrFit, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"), varLabels = AMSv1, file = "AMS_TAbles", type = "csv", print.results = FALSE)
#By changing print.results = TRUE, you can see the output below
semPlot::semPaths(AMS4CorrFit, layout = "tree", style = "lisrel", what = "col", whatLabels = "stand")
semPlot::semPaths(AMS4CorrFit, layout = "tree", style = "lisrel", what = "col", whatLabels = "est")
mild_df <- subset(dfAMSi, Severity == "Mild")
severe_df <- subset(dfAMSi, Severity == "Severe")
View(mild_df)
MildFit <- lavaan::cfa(AMS4CorrMod, data = mild_df)
lavaan::summary(MildFit, fit.measures = TRUE, standardized = TRUE)
SevereFit <- lavaan::cfa(AMS4CorrMod, data = severe_df)
lavaan::summary(SevereFit, fit.measures = TRUE, standardized = TRUE)
configural <- lavaan::cfa(AMS4CorrMod, data = dfAMSi, group = "Severity")
lavaan::summary(configural, fit.measures = TRUE, standardized = TRUE)
#semPlot::semPaths(configural, layout = "tree", style = "lisrel", what = "col", whatLabels = "stand")
semPlot::semPaths(configural, layout = "tree", style = "lisrel", what = "col", whatLabels = "est")
#If R stalls, open the console. I received the intruction, "Hit <Return> to see next plot:"
#Then it ran!
configural <- lavaan::cfa(AMS4CorrMod, data = dfAMSi, group = "Severity")
lavaan::summary(configural, fit.measures = TRUE, standardized = TRUE)
#put it in a table
Config <- semTable::semTable(configural, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"), varLabels = AMS_vars, file = "Configural", type = "csv", print.results = FALSE)
#item labels
#I took out commas internal to the items because the comma causes the text to split across columns in the exported .csv
AMSv1 <- c(Help1 = "People feel they need to do something to help me because I have a disability", Help2 = "People express admiration for me or describe me as inspirational simply because I live with a disability", Help3 = "People express pity for me because I have a disability", Help4 = "People do not expect me to have a job or volunteer activities because I have a disability", Help5 = "People offer me unsolicited unwanted or unneeded help because I have a disability", Min1 = "People are unwilling to accept that I have a disability because I appear able-bodied", Min2 = "People minimize my disability or suggest that it could be worse", Min3 = "People act as if accomodations for my disability are unnecessary", Pers1 = "People don't see me as a whole person because I have a disability", Pers2 = "People act as if I am nothing more than my disability", Pers3 = "People speak to me as if I am a child or do not take me seriously because I have a disability", Pers4 = "People assume I have low intelligence because I have a disability", Pers5 = "Because I have a disability people attempt to make decisions fro me that I could make myself", Oth1 = "People think I should not date or pursue sexual relationships because I have a disability", Oth2 = "People indicate they would not date a person with a disability", Oth3 = "People suggest that I cannot or should not have children because I have a disability", Oth4 = "People stare at me because I have a disability", Oth5 = "Because I have a disability people seem surprised to see me outside my home", Oth6 = "Because I have a disability people assume I have an extraordinary gift or talent",Oth7 = "People suggest that living with a disability would not be a worthwhile existence")
#put it in a table
AMS_Tables <- semTable::semTable(AMS4CorrFit, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"), varLabels = AMSv1, file = "AMS_TAbles", type = "csv", print.results = FALSE)
#By changing print.results = TRUE, you can see the output below
#put it in a table
Config <- semTable::semTable(configural, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"), varLabels = AMSv1, file = "Configural", type = "csv", print.results = FALSE)
#By changing print.results = TRUE, you can see the output below
#semPlot::semPaths(configural, layout = "tree", style = "lisrel", what = "col", whatLabels = "stand")
semPlot::semPaths(configural, layout = "tree", style = "lisrel", what = "col", whatLabels = "est")
#If R stalls, open the console. I received the intruction, "Hit <Return> to see next plot:"
#Then it ran!
weak <- lavaan::cfa(AMS4CorrMod, data = dfAMSi, group = "Severity", group.equal = "loadings")
lavaan::summary(weak, fit.measures = TRUE, standardized = TRUE)
lavaan::anova(configural, weak)
Weak <- semTable::semTable(weak, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"),  varLabels = AMS_vars, file = "Weak", type = "csv", print.results = FALSE)
Weak <- semTable::semTable(weak, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"),  varLabels = AMSv1, file = "Weak", type = "csv", print.results = FALSE)
#By changing print.results = TRUE, you can see the output below
#semPlot::semPaths(weak, layout = "tree", style = "lisrel", what = "col", whatLabels = "stand")
semPlot::semPaths(weak, layout = "tree", style = "lisrel", what = "col", whatLabels = "est")
#If R stalls, open the console. I received the intruction, "Hit <Return> to see next plot:"
#Then it ran!
strong <- lavaan::cfa(AMS4CorrMod, data = dfAMSi, group = "Severity", group.equal=c("loadings", "intercepts"))
lavaan::summary(strong, fit.measures = TRUE, standardized = TRUE)
lavaan::anova(configural, weak, strong)
psych::describe(dfAMSi$Help1)
Strong <- semTable::semTable(strong, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"),  varLabels = AMSv1, file = "strong", type = "csv", print.results = FALSE)
#By changing print.results = TRUE, you can see the output below
#semPlot::semPaths(strong, layout = "tree", style = "lisrel", what = "col", whatLabels = "stand")
semPlot::semPaths(strong, layout = "tree", style = "lisrel", what = "col", whatLabels = "est")
#If R stalls, open the console. I received the intruction, "Hit <Return> to see next plot:"
#Then it ran!
strict <- lavaan::cfa(AMS4CorrMod, data = dfAMSi, group = "Severity", group.equal = c("loadings", "intercepts", "residuals"))
lavaan::summary(strict, fit.measures = TRUE, standardized = TRUE,)
lavaan::anova(configural, weak, strong, strict)
Strict <- semTable::semTable(strict, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"),  varLabels = AMSv1, file = "Strict", type = "csv", print.results = FALSE)
#By changing print.results = TRUE, you can see the output below
#semPlot::semPaths(strict, layout = "tree", style = "lisrel", what = "col", whatLabels = "stand")
semPlot::semPaths(strict, layout = "tree", style = "lisrel", what = "col", whatLabels = "est")
#If R stalls, open the console. I received the intruction, "Hit <Return> to see next plot:"
#Then it ran!
semTools::measurementInvariance(model = AMS4CorrMod, data = dfAMSi, group = "Severity", meanstructure=TRUE)
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
#saveRDS(dfAMSi, "dfAMSi.rds")
#bring back the simulated dat from an .rds file
dfAMSi <- readRDS("dfAMSi.rds")
str(dfAMSi)
View(dfAMSi)
AMS4CorrMod <-  '
Helplessness =~ Help1 + Help2 + Help3 + Help4 + Help5
Minimization =~ Min1 + Min2 + Min3
DenialPersonhood =~ Pers1 + Pers2 + Pers3 + Pers4 + Pers5
Otherization =~ Oth1 + Oth2 + Oth3 + Oth4 + Oth5 + Oth6 + Oth7
'
lavaan::summary(AMS4CorrFit, fit.measures = TRUE, standardized = TRUE)
AMS4CorrFit <- lavaan::cfa(AMS4CorrMod, data = dfAMSi)
lavaan::summary(AMS4CorrFit, fit.measures = TRUE, standardized = TRUE)
AMSv1 <- c(Help1 = "People feel they need to do something to help me because I have a disability", Help2 = "People express admiration for me or describe me as inspirational simply because I live with a disability", Help3 = "People express pity for me because I have a disability", Help4 = "People do not expect me to have a job or volunteer activities because I have a disability", Help5 = "People offer me unsolicited unwanted or unneeded help because I have a disability", Min1 = "People are unwilling to accept that I have a disability because I appear able-bodied", Min2 = "People minimize my disability or suggest that it could be worse", Min3 = "People act as if accomodations for my disability are unnecessary", Pers1 = "People don't see me as a whole person because I have a disability", Pers2 = "People act as if I am nothing more than my disability", Pers3 = "People speak to me as if I am a child or do not take me seriously because I have a disability", Pers4 = "People assume I have low intelligence because I have a disability", Pers5 = "Because I have a disability people attempt to make decisions fro me that I could make myself", Oth1 = "People think I should not date or pursue sexual relationships because I have a disability", Oth2 = "People indicate they would not date a person with a disability", Oth3 = "People suggest that I cannot or should not have children because I have a disability", Oth4 = "People stare at me because I have a disability", Oth5 = "Because I have a disability people seem surprised to see me outside my home", Oth6 = "Because I have a disability people assume I have an extraordinary gift or talent",Oth7 = "People suggest that living with a disability would not be a worthwhile existence")
#put it in a table
AMS_Tables <- semTable::semTable(AMS4CorrFit, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"), varLabels = AMSv1, file = "AMS_TAbles", type = "csv", print.results = FALSE)
#By changing print.results = TRUE, you can see the output below
#displays standardized pattern coefficients
semPlot::semPaths(AMS4CorrFit, layout = "tree", style = "lisrel", what = "col", whatLabels = "stand")
#displays estimates/unstandardized regression weights
#semPlot::semPaths(AMS4CorrFit, layout = "tree", style = "lisrel", what = "col", whatLabels = "est")
mild_df <- subset(dfAMSi, Severity == "Mild")
severe_df <- subset(dfAMSi, Severity == "Severe")
View(mild_df)
MildFit <- lavaan::cfa(AMS4CorrMod, data = mild_df)
lavaan::summary(MildFit, fit.measures = TRUE, standardized = TRUE)
SevereFit <- lavaan::cfa(AMS4CorrMod, data = severe_df)
lavaan::summary(SevereFit, fit.measures = TRUE, standardized = TRUE)
configural <- lavaan::cfa(AMS4CorrMod, data = dfAMSi, group = "Severity")
lavaan::summary(configural, fit.measures = TRUE, standardized = TRUE)
#put it in a table
Config <- semTable::semTable(configural, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"), varLabels = AMSv1, file = "Configural", type = "csv", print.results = FALSE)
#By changing print.results = TRUE, you can see the output below
#semPlot::semPaths(configural, layout = "tree", style = "lisrel", what = "col", whatLabels = "stand")
semPlot::semPaths(configural, layout = "tree", style = "lisrel", what = "col", whatLabels = "est")
#If R stalls, open the console. I received the intruction, "Hit <Return> to see next plot:"
#Then it ran!
weak <- lavaan::cfa(AMS4CorrMod, data = dfAMSi, group = "Severity", group.equal = "loadings")
lavaan::summary(weak, fit.measures = TRUE, standardized = TRUE)
Weak <- semTable::semTable(weak, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"),  varLabels = AMSv1, file = "Weak", type = "csv", print.results = FALSE)
#By changing print.results = TRUE, you can see the output below
lavaan::anova(configural, weak)
#semPlot::semPaths(weak, layout = "tree", style = "lisrel", what = "col", whatLabels = "stand")
semPlot::semPaths(weak, layout = "tree", style = "lisrel", what = "col", whatLabels = "est")
#If R stalls, open the console. I received the intruction, "Hit <Return> to see next plot:"
#Then it ran!
strong <- lavaan::cfa(AMS4CorrMod, data = dfAMSi, group = "Severity", group.equal=c("loadings", "intercepts"))
lavaan::summary(strong, fit.measures = TRUE, standardized = TRUE)
Strong <- semTable::semTable(strong, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"),  varLabels = AMSv1, file = "strong", type = "csv", print.results = FALSE)
#By changing print.results = TRUE, you can see the output below
#semPlot::semPaths(strong, layout = "tree", style = "lisrel", what = "col", whatLabels = "stand")
semPlot::semPaths(strong, layout = "tree", style = "lisrel", what = "col", whatLabels = "est")
#If R stalls, open the console. I received the intruction, "Hit <Return> to see next plot:"
#Then it ran!
lavaan::anova(configural, weak, strong)
ict <- lavaan::cfa(AMS4CorrMod, data = dfAMSi, group = "Severity", group.equal = c("loadings", "intercepts", "residuals"))
lavaan::summary(strict, fit.measures = TRUE, standardized = TRUE,)
strict <- lavaan::cfa(AMS4CorrMod, data = dfAMSi, group = "Severity", group.equal = c("loadings", "intercepts", "residuals"))
lavaan::summary(strict, fit.measures = TRUE, standardized = TRUE,)
lavaan::anova(configural, weak, strong, strict)
Strict <- semTable::semTable(strict, columnLabels = c(eststars = "Estimate", se = "SE", p = "p-value"), fits = c("chisq", "df", "pvalue", "cfi", "rmsea", "rmsea.ci.lower", "rmsea.ci.upper", "srmr", "aic", "bic"),  varLabels = AMSv1, file = "Strict", type = "csv", print.results = FALSE)
#By changing print.results = TRUE, you can see the output below
#semPlot::semPaths(strict, layout = "tree", style = "lisrel", what = "col", whatLabels = "stand")
semPlot::semPaths(strict, layout = "tree", style = "lisrel", what = "col", whatLabels = "est")
#If R stalls, open the console. I received the intruction, "Hit <Return> to see next plot:"
#Then it ran!
semTools::measurementInvariance(model = AMS4CorrMod, data = dfAMSi, group = "Severity", meanstructure=TRUE)
