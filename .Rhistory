sd <- c(1.26, 1.33, 1.51, .23, 1.15, .53, .80, .78)
r_mat <- matrix(c(1,   .88, .90, .35, -.56, -.27, .25, .24,
.88,  1,  .58, .25, -.59, -.29, .17, .18,
.90, .58,  1,  .37, -.41, -.19, .27, .24,
.35, .25, .37,  1,  -.22, -.04, .23, .21,
-.56,-.59, -.41, -.22, 1,   .53, -.29, -.32,
-.27, -.29, -.19, -.04, .53, 1, -.22, -.26,
.25, .17,  .27,  .23,  -.29, -.22, 1, .76,
.24,  .18, .24, .21, -.32,  -.26, .76,  1), ncol = 8)
cov_mat <- sd %*% t(sd) * r_mat
set.seed(210907)
library(MASS)
SzyDF <- mvrnorm(n = 646, mu=mu, Sigma=cov_mat, empirical=TRUE)
View(cov_mat)
View(r_mat)
mu <- c(3.16, 2.71, 3.61, .11, 5.61, 4.41, 1.45, 1.29)
sd <- c(1.26, 1.33, 1.51, .23, 1.15, .53, .80, .78)
r_mat <- matrix(c(1,   .88, .90, .35, -.56, -.27, .25, .24,
.88,  1,  .58, .25, -.59, -.29, .17, .18,
.90, .58,  1,  .37, -.41, -.19, .27, .24,
.35, .25, .37,  1,  -.22, -.04, .23, .21,
-.56,-.59, -.41, -.22, 1,   .53, -.29, -.32,
-.27, -.29, -.19, -.04, .53, 1, -.22, -.26,
.25, .17,  .27,  .23,  -.29, -.22, 1, .76,
.24,  .18, .24, .21, -.32,  -.26, .76,  1), ncol = 8)
cov_mat <- sd %*% t(sd) * r_mat
set.seed(210907)
library(MASS)
SzyDF <- mvrnorm(n = 646, mu=mu, Sigma=cov_mat, empirical=FALSE)
mu <- c(3.16, 2.71, 3.61, .11, 5.61, 4.41, 1.45, 1.29)
sd <- c(1.26, 1.33, 1.51, .23, 1.15, .53, .80, .78)
r_mat <- matrix(c(1,   .88, .90, .35, -.56, -.27, .25, .24,
.88,  1,  .58, .25, -.59, -.29, .17, .18,
.90, .58,  1,  .37, -.41, -.19, .27, .24,
.35, .25, .37,  1,  -.22, -.04, .23, .21,
-.56,-.59, -.41, -.22, 1,   .53, -.29, -.32,
-.27, -.29, -.19, -.04, .53, 1, -.22, -.26,
.25, .17,  .27,  .23,  -.29, -.22, 1, .76,
.24,  .18, .24, .21, -.32,  -.26, .76,  1), ncol = 8)
cov_mat <- sd %*% t(sd) * r_mat
set.seed(210907)
library(MASS)
SzyDF <- mvrnorm(n = 646, mu=mu, Sigma=cov_mat, empirical=FALSE)
mu <- c(3.16, 2.71, 3.61, .11, 5.61, 4.41, 1.45, 1.29)
sd <- c(1.26, 1.33, 1.51, .23, 1.15, .53, .80, .78)
r_mat <- matrix(c(1,   .88, .90, .35, -.56, -.27, .25, .24,
.88,  1,  .58, .25, -.59, -.29, .17, .18,
.90, .58,  1,  .37, -.41, -.19, .27, .24,
.35, .25, .37,  1,  -.22, -.04, .23, .21,
-.56,-.59, -.41, -.22, 1,   .53, -.29, -.32,
-.27, -.29, -.19, -.04, .53, 1, -.22, -.26,
.25, .17,  .27,  .23,  -.29, -.22, 1, .76,
.24,  .18, .24, .21, -.32,  -.26, .76,  1), ncol = 8)
cov_mat <- sd %*% t(sd) * r_mat
set.seed(210907)
library(MASS)
SzyDF <- mvrnorm(n = 646, mu=mu, Sigma=cov_mat, tol=1e-6, empirical=FALSE)
is.positive.definite(cov_mat)
set.seed(210907)
library(MASS)
SzyDF <- mvrnorm(n = 646, mu=mu, Sigma=cov_mat, tol=1e-6, empirical=TRUE)
set.seed(210907)
library(MASS)
SzyDF <- mvrnorm(n = 646, mu=mu, Sigma=cov_mat, tol=1e-5, empirical=TRUE)
set.seed(210907)
library(MASS)
SzyDF <- mvrnorm(n = 646, mu=mu, Sigma=cov_mat, tol=1e-4, empirical=TRUE)
set.seed(210907)
library(MASS)
SzyDF <- mvrnorm(n = 646, mu=mu, Sigma=cov_mat, tol=1e-3, empirical=TRUE)
colMeans(SzyDF)
cor(SzyDF)
Szy_mu <- c(3.16, 2.71, 3.61, .11, 5.61, 4.41, 1.45, 1.29)
Szy_sd <- c(1.26, 1.33, 1.51, .23, 1.15, .53, .80, .78)
Szy_r_mat <- matrix(c(1,   .88, .90, .35, -.56, -.27, .25, .24,
.88,  1,  .58, .25, -.59, -.29, .17, .18,
.90, .58,  1,  .37, -.41, -.19, .27, .24,
.35, .25, .37,  1,  -.22, -.04, .23, .21,
-.56,-.59, -.41, -.22, 1,   .53, -.29, -.32,
-.27, -.29, -.19, -.04, .53, 1, -.22, -.26,
.25, .17,  .27,  .23,  -.29, -.22, 1, .76,
.24,  .18, .24, .21, -.32,  -.26, .76,  1), ncol = 8)
Szy_cov_mat <- Szy_sd %*% t(Szy_sd) * Szy_r_mat
set.seed(210907)
library(MASS)
SzyDF <- mvrnorm(n = 646, mu=Szy_mu, Sigma=Szy_cov_mat, tol=1e-3, empirical=TRUE) #adding "tol=1e-3" fixed the not positive matrix erro
colMeans(SzyDF)
cor(SzyDF)
set.seed(210907)
library(MASS)
SzyDF <- mvrnorm(n = 646, mu=Szy_mu, Sigma=Szy_cov_mat, tol=1e-3, empirical=TRUE) #adding "tol=1e-3" fixed the not positive matrix erro
colMeans(SzyDF)
round(cor(SzyDF))
set.seed(210907)
library(MASS)
SzyDF <- mvrnorm(n = 646, mu=Szy_mu, Sigma=Szy_cov_mat, tol=1e-3, empirical=TRUE) #adding "tol=1e-3" fixed the not positive matrix erro
colMeans(SzyDF)
round(cor(SzyDF), 3)
head(SzyDF)
as.data.frame(SzyDF)
SzyDF <- as.data.frame(SzyDF)
View(SzyDF)
SzyDF <- as.data.frame(SzyDF)
SzyDF <- tidyverse::rename(df_raw, CClimate = V1, CResponse = V2, Stigma = V3, Victimization = V4, CollSat = V5, Persistence = V6, Anxiety = V7, Depression = V8)
SzyDF <- as.data.frame(SzyDF)
SzyDF <- dplyr::rename(df_raw, CClimate = V1, CResponse = V2, Stigma = V3, Victimization = V4, CollSat = V5, Persistence = V6, Anxiety = V7, Depression = V8)
SzyDF <- as.data.frame(SzyDF)
SzyDF <- dplyr::rename(SzyDF, CClimate = V1, CResponse = V2, Stigma = V3, Victimization = V4, CollSat = V5, Persistence = V6, Anxiety = V7, Depression = V8)
View(SzyDF)
round(SzyDF, 0)
round(SzyDF, 2)
View(SzyDF)
SzyDF <- as.data.frame(SzyDF)
SzyDF <- dplyr::rename(SzyDF, CClimate = V1, CResponse = V2, Stigma = V3, Victimization = V4, CollSat = V5, Persistence = V6, Anxiety = V7, Depression = V8)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
#will install the package if not already installed
#if(!require(tidyverse)){install.packages("tidyverse")}
#if(!require(MASS)){install.packages("MASS")}
#if(!require(psych)){install.packages("psych")}
Szy_mu <- c(3.16, 2.71, 3.61, .11, 5.61, 4.41, 1.45, 1.29)
Szy_sd <- c(1.26, 1.33, 1.51, .23, 1.15, .53, .80, .78)
Szy_r_mat <- matrix(c(1,   .88, .90, .35, -.56, -.27, .25, .24,
.88,  1,  .58, .25, -.59, -.29, .17, .18,
.90, .58,  1,  .37, -.41, -.19, .27, .24,
.35, .25, .37,  1,  -.22, -.04, .23, .21,
-.56,-.59, -.41, -.22, 1,   .53, -.29, -.32,
-.27, -.29, -.19, -.04, .53, 1, -.22, -.26,
.25, .17,  .27,  .23,  -.29, -.22, 1, .76,
.24,  .18, .24, .21, -.32,  -.26, .76,  1), ncol = 8)
Szy_cov_mat <- Szy_sd %*% t(Szy_sd) * Szy_r_mat
set.seed(210907)
library(MASS)
SzyDF <- mvrnorm(n = 646, mu=Szy_mu, Sigma=Szy_cov_mat, tol=1e-3, empirical=TRUE) #adding "tol=1e-3" fixed the not positive matrix erro
colMeans(SzyDF)
round(cor(SzyDF), 3)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
#will install the package if not already installed
#if(!require(tidyverse)){install.packages("tidyverse")}
#if(!require(MASS)){install.packages("MASS")}
#if(!require(psych)){install.packages("psych")}
Szy_mu <- c(3.16, 2.71, 3.61, .11, 5.61, 4.41, 1.45, 1.29)
Szy_sd <- c(1.26, 1.33, 1.51, .23, 1.15, .53, .80, .78)
Szy_r_mat <- matrix(c(1,   .88, .90, .35, -.56, -.27, .25, .24,
.88,  1,  .58, .25, -.59, -.29, .17, .18,
.90, .58,  1,  .37, -.41, -.19, .27, .24,
.35, .25, .37,  1,  -.22, -.04, .23, .21,
-.56,-.59, -.41, -.22, 1,   .53, -.29, -.32,
-.27, -.29, -.19, -.04, .53, 1, -.22, -.26,
.25, .17,  .27,  .23,  -.29, -.22, 1, .76,
.24,  .18, .24, .21, -.32,  -.26, .76,  1), ncol = 8)
Szy_cov_mat <- Szy_sd %*% t(Szy_sd) * Szy_r_mat
set.seed(210907)
library(MASS)
SzyDF <- mvrnorm(n = 646, mu=Szy_mu, Sigma=Szy_cov_mat, tol=1e-3, empirical=TRUE) #adding "tol=1e-3" fixed the not positive matrix erro
colMeans(SzyDF)
round(cor(SzyDF), 3)
SzyDF <- as.data.frame(SzyDF)
SzyDF <- dplyr::rename(SzyDF, CClimate = V1, CResponse = V2, Stigma = V3, Victimization = V4, CollSat = V5, Persistence = V6, Anxiety = V7, Depression = V8)
SzyDF <- round(SzyDF, 2)
View(SzyDF)
corr(SzyDF)
cor(SzyDF)
set.seed(210907)
library(MASS)
SzyDF <- as.data.frame(mvrnorm(n = 646, mu=Szy_mu, Sigma=Szy_cov_mat, tol=1e-3, empirical=TRUE)) #adding "tol=1e-3" fixed the not positive matrix erro
View(SzyDF)
SzyDF <- round(dplyr::rename(SzyDF, CClimate = V1, CResponse = V2, Stigma = V3, Victimization = V4, CollSat = V5, Persistence = V6, Anxiety = V7, Depression = V8),2)
View(SzyDF)
SzyDF <- round(as.data.frame(mvrnorm(n = 646, mu=Szy_mu, Sigma=Szy_cov_mat, tol=1e-3, empirical=TRUE)),2) #adding "tol=1e-3" fixed the not positive matrix error
SzyDF <- round(dplyr::rename(SzyDF, CClimate = V1, CResponse = V2, Stigma = V3, Victimization = V4, CollSat = V5, Persistence = V6, Anxiety = V7, Depression = V8),2)
View(SzyDF)
cor(SzyDF)
cor(SzyDF, 2)
round(cor(SzyDF),2)
citr:::insert_citation()
apaTables::apa.cor.table(SzyDF, filename = "SzyDor.doc", table.number = 1, show.sig.stars=TRUE, landscape=TRUE)
apaTables::apa.cor.table(SzyDF, filename = "SzyCor.doc", table.number = 1, show.sig.stars=TRUE, landscape=TRUE)
?lm
Sat_Climate <- lm(Persistence ~ Victimization + CClimate, data = SzyDF)
Sat_Climate <- lm(Persistence ~ Victimization + CClimate, data = SzyDF)
summary(Sat_Climate)
PfV <- lm(Persistence ~ Victimization, data = SzyDF)
PfVC <- lm(Persistence ~ Victimization + CClimate, data = SzyDF)
anova(PfV, PfVC)
PfV <- lm(Persistence ~ Victimization, data = SzyDF)
PfVC <- lm(Persistence ~ Victimization + CClimate, data = SzyDF)
summary(PfV)
summary(PfVC)
anova(PfV, PfVC)
R2ch <- anova(PfV, PfVC)
R2ch
PfV <- lm(Persistence ~ Victimization, data = SzyDF)
PfVC <- lm(Persistence ~ Victimization + CClimate, data = SzyDF)
summary(PfV)
summary(PfVC)
anova(PfV, PfVC)
PfV <- lm(Persistence ~ Victimization, data = SzyDF)
PfVC <- lm(Persistence ~ Victimization + CClimate, data = SzyDF)
summary(PfV)
summary(PfVC)
anova(PfV, PfVC)
AfV <- lm(Anxiety ~ Victimization, data = SzyDF)
AfVC <- lm(Anxiety ~ Victimization + CClimate, data = SzyDF)
summary(AfV)
summary(AfVC)
anova(AfVC)
AfV <- lm(Anxiety ~ Victimization, data = SzyDF)
AfVC <- lm(Anxiety ~ Victimization + CClimate, data = SzyDF)
summary(AfV)
summary(AfVC)
anova(AfV, AfVC)
citr:::insert_citation()
n=rep(1:100,2)
a=0
b = 1
sigma2 = n^1.3
eps = rnorm(n,mean=0,sd=sqrt(sigma2))
y=a+b*n + eps
mod <- lm(y ~ n)
plot(n,y)
citr:::insert_citation()
set.seed(210827)
SzyT1 <- matrix(c(.88, .73, .73, -.07,-.02, .16, -.03, .10, -.04, .86, .76, .71), ncol=2) #primary factor loadings for the two factors
rownames(SzyT1) <- c("cold", "unresponsive", "supportiveNR", "negative", "heterosexism", "harassed") #variable names for the six items
#rownames(Szyf2) <- paste("V", seq(1:6), sep=" ") #prior code I replaced with above
colnames(SzyT1) <- c("F1", "F2")
SzyCorMat <- SzyT1 %*% t(SzyT1) #create the correlation matrix
diag(SzyCorMat) <- 1
#SzyCorMat #prints the correlation matrix
SzyM <- c(2.31, 3.11, 2.40, 3.18, 4.44, 3.02) #item means
SzySD <- c(1.35, 1.46, 1.26, 1.60, 1.75, 1.50) #item standard deviations; turns out we won't need these since we have a covariance matrix
SzyCovMat <- SzySD %*% t(SzySD) * SzyCorMat #creates a covariance matrix from the correlation matrix
#SzyCovMat #displays the covariance matrix
dfSzyT1 <- as.data.frame(round(MASS::mvrnorm(n=646, mu = SzyM, Sigma = SzyCovMat, empirical = TRUE),0)) #creates the item level data from the sample size, mean, and covariance matrix
dfSzyT1[dfSzyT1>7]<-7 #restricts the upperbound of all variables to be 7 or less
dfSzyT1[dfSzyT1<1]<-1 #resticts the lowerbound of all variable to be 1 or greater
#colMeans(dfSzyT1) #displays column means
library(tidyverse)
library(dplyr)
dfSzyT1 <- dfSzyT1 %>% dplyr::mutate(ID = row_number()) #add ID to each row
dfSzyT1 <- dfSzyT1%>%dplyr::select(ID, everything())#moving the ID number to the first column; requires
dfSzyT1<- dfSzyT1 %>%
mutate(supportive = 8 - supportiveNR) #because the original scale had 1 reversed item, I reversed it so that we can re-reverse it for practice. Remember in reversals we subtract from a number 1 greater than our scaling
dfSzyT1 <- dfSzyT1%>%
select(-supportiveNR)
#write the simulated data  as a .csv
write.table(dfSzyT1, file="dfSzyT1.csv", sep=",", col.names=TRUE, row.names=FALSE)
#bring back the simulated dat from a .csv file
dfSzyT1 <- read.csv ("dfSzyT1.csv", header = TRUE)
#bring back the simulated dat from a .csv file
dfSzyT1 <- read.csv ("dfSzyT1.csv", header = TRUE)
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
saveRDS(dfSzyT1, "dfSzyT1.rds")
#bring back the simulated dat from an .rds file
dfSzyT1 <- readRDS("dfSzyT1.rds")
#bring back the simulated dat from an .rds file
dfSzyT1 <- readRDS("dfSzyT1.rds")
set.seed(210827)
SzyT1 <- matrix(c(.88, .73, .73, -.07,-.02, .16, -.03, .10, -.04, .86, .76, .71), ncol=2) #primary factor loadings for the two factors
rownames(SzyT1) <- c("cold", "unresponsive", "supportiveNR", "negative", "heterosexism", "harassed") #variable names for the six items
#rownames(Szyf2) <- paste("V", seq(1:6), sep=" ") #prior code I replaced with above
colnames(SzyT1) <- c("F1", "F2")
SzyCorMat <- SzyT1 %*% t(SzyT1) #create the correlation matrix
diag(SzyCorMat) <- 1
#SzyCorMat #prints the correlation matrix
SzyM <- c(2.31, 3.11, 2.40, 3.18, 4.44, 3.02) #item means
SzySD <- c(1.35, 1.46, 1.26, 1.60, 1.75, 1.50) #item standard deviations; turns out we won't need these since we have a covariance matrix
SzyCovMat <- SzySD %*% t(SzySD) * SzyCorMat #creates a covariance matrix from the correlation matrix
#SzyCovMat #displays the covariance matrix
library(MASS)
dfSzyT1 <- round(mvrnorm(n=646, mu = SzyM, Sigma = SzyCovMat, empirical = TRUE),0) #creates the item level data from the sample size, mean, and covariance matrix
dfSzyT1[dfSzyT1>7]<-7 #restricts the upperbound of all variables to be 7 or less
dfSzyT1[dfSzyT1<1]<-1 #resticts the lowerbound of all variable to be 1 or greater
#colMeans(dfSzy) #displays column means
library(tidyverse)
dfSzyT1 <- as.data.frame(dfSzyT1) #converts to a df so we can use in R
dfSzyT1 <- dfSzyT1 %>% dplyr::mutate(ID = row_number()) #add ID to each row
dfSzyT1 <- dfSzyT1%>%dplyr::select(ID, everything())#moving the ID number to the first column; requires
dfSzyT1<- dfSzyT1 %>%
mutate(supportive = 8 - supportiveNR) #because the original scale had 1 reversed item, I reversed it so that we can re-reverse it for practice; reversing means subracting from 1 greater than the scaling of the scale (in our case 1 to 7, so we subtract from 8)
dfSzyT1 <- dfSzyT1%>%
select(-supportiveNR)
View(dfSzyT1)
#For portability of the lesson, I hand-entered the exam score data.
#Variables are items (not students), so the entry is the 41 items for the 12 students
Item1 <- c(1,1,4,1,1,1,1,1,1,1,1,1)
Item2 <- c(4,4,1,4,4,4,4,4,4,4,4,4)
Item3 <- c(1,1,4,1,1,1,1,3,1,1,1,1)
Item4 <- c(2,3,2,2,2,2,2,2,2,2,2,2)
Item5 <- c(1,1,1,1,1,1,1,1,1,1,1,1)
Item6 <- c(1,1,1,1,1,1,1,1,1,1,1,1)
Item7 <- c(3,3,4,4,4,3,3,3,3,3,3,2)
Item8 <- c(1,2,2,4,2,2,2,2,1,4,2,2)
Item9 <- c(1,1,4,4,1,4,1,1,1,1,1,4)
Item10 <- c(3,3,3,2,3,2,3,2,2,3,3,3)
Item11 <- c(1,1,4,1,1,3,4,1,3,3,1,3)
Item12 <- c(2,1,2,4,2,2,2,2,2,2,2,2)
Item13 <- c(2,2,3,3,2,2,2,2,2,2,2,1)
Item14 <- c(2,2,2,2,2,2,3,2,2,2,2,2)
Item15 <- c(2,1,1,3,2,4,2,2,2,2,4,2)
Item16 <- c(2,2,2,4,4,2,2,2,4,2,2,1)
Item17 <- c(1,1,1,1,1,1,1,1,1,1,1,1)
Item18 <- c(3,3,3,3,3,3,3,3,3,3,3,3)
Item19 <- c(4,4,4,4,4,1,4,4,4,4,4,4)
Item20 <- c(1,1,1,1,1,1,1,1,1,1,1,1)
Item21 <- c(2,4,4,4,2,2,2,4,2,4,4,4)
Item22 <- c(3,3,3,3,3,3,3,3,3,3,3,1)
Item23 <- c(3,3,2,3,3,3,3,3,2,3,3,2)
Item24 <- c(3,3,1,3,3,3,2,3,3,3,3,1)
Item25 <- c(2,2,2,2,3,2,2,2,2,2,2,2)
Item26 <- c(4,4,4,4,4,4,4,4,1,4,4,1)
Item27 <- c(4,4,1,4,4,4,4,4,4,4,4,4)
Item28 <- c(1,1,1,1,1,1,1,1,1,1,1,1)
Item29 <- c(1,3,1,1,1,1,1,1,1,1,1,1)
Item30 <- c(2,2,2,2,2,2,2,2,2,2,2,2)
Item31 <- c(1,1,1,2,1,1,3,1,1,1,1,2)
Item32 <- c(1,1,3,1,1,1,3,1,1,1,1,1)
Item33 <- c(3,3,3,3,3,3,3,3,3,3,3,3)
Item34 <- c(3,3,3,3,3,3,3,3,3,3,3,3)
Item35 <- c(3,3,3,3,3,3,3,3,3,3,3,3)
Item36 <- c(2,2,2,2,2,2,2,2,2,2,2,2)
Item37 <- c(2,2,1,3,3,1,2,3,3,2,3,1)
Item38 <- c(1,4,4,4,NA,4,4,4,1,4,4,1)
Item39 <- c(3,3,3,3,3,3,3,3,3,3,3,3)
Item40 <- c(3,3,4,3,3,3,3,3,3,3,3,3)
Item41 <- c(2,1,2,2,2,4,4,2,2,4,4,2)
exam <- data.frame(Item1, Item2, Item3, Item4, Item5, Item6, Item7, Item8, Item9, Item10, Item11,Item12, Item13, Item14, Item15, Item16, Item17, Item18, Item19, Item20, Item21, Item22, Item23, Item24,Item25, Item26, Item27, Item28, Item29, Item30, Item31, Item32, Item33, Item34, Item35, Item36, Item37, Item38, Item39, Item40, Item41)
View(exam)
#write the simulated data  as a .csv
write.table(exam, file="exam.csv", sep=",", col.names=TRUE, row.names=FALSE)
#bring back the simulated dat from a .csv file
exam <- read.csv ("exam.csv", header = TRUE)
#bring back the simulated dat from a .csv file
exam <- read.csv ("exam.csv", header = TRUE)
View(exam)
#For portability of the lesson, I hand-entered the exam score data.
#Variables are items (not students), so the entry is the 41 items for the 12 students
Item1 <- c(1,1,4,1,1,1,1,1,1,1,1,1)
Item2 <- c(4,4,1,4,4,4,4,4,4,4,4,4)
Item3 <- c(1,1,4,1,1,1,1,3,1,1,1,1)
Item4 <- c(2,3,2,2,2,2,2,2,2,2,2,2)
Item5 <- c(1,1,1,1,1,1,1,1,1,1,1,1)
Item6 <- c(1,1,1,1,1,1,1,1,1,1,1,1)
Item7 <- c(3,3,4,4,4,3,3,3,3,3,3,2)
Item8 <- c(1,2,2,4,2,2,2,2,1,4,2,2)
Item9 <- c(1,1,4,4,1,4,1,1,1,1,1,4)
Item10 <- c(3,3,3,2,3,2,3,2,2,3,3,3)
Item11 <- c(1,1,4,1,1,3,4,1,3,3,1,3)
Item12 <- c(2,1,2,4,2,2,2,2,2,2,2,2)
Item13 <- c(2,2,3,3,2,2,2,2,2,2,2,1)
Item14 <- c(2,2,2,2,2,2,3,2,2,2,2,2)
Item15 <- c(2,1,1,3,2,4,2,2,2,2,4,2)
Item16 <- c(2,2,2,4,4,2,2,2,4,2,2,1)
Item17 <- c(1,1,1,1,1,1,1,1,1,1,1,1)
Item18 <- c(3,3,3,3,3,3,3,3,3,3,3,3)
Item19 <- c(4,4,4,4,4,1,4,4,4,4,4,4)
Item20 <- c(1,1,1,1,1,1,1,1,1,1,1,1)
Item21 <- c(2,4,4,4,2,2,2,4,2,4,4,4)
Item22 <- c(3,3,3,3,3,3,3,3,3,3,3,1)
Item23 <- c(3,3,2,3,3,3,3,3,2,3,3,2)
Item24 <- c(3,3,1,3,3,3,2,3,3,3,3,1)
Item25 <- c(2,2,2,2,3,2,2,2,2,2,2,2)
Item26 <- c(4,4,4,4,4,4,4,4,1,4,4,1)
Item27 <- c(4,4,1,4,4,4,4,4,4,4,4,4)
Item28 <- c(1,1,1,1,1,1,1,1,1,1,1,1)
Item29 <- c(1,3,1,1,1,1,1,1,1,1,1,1)
Item30 <- c(2,2,2,2,2,2,2,2,2,2,2,2)
Item31 <- c(1,1,1,2,1,1,3,1,1,1,1,2)
Item32 <- c(1,1,3,1,1,1,3,1,1,1,1,1)
Item33 <- c(3,3,3,3,3,3,3,3,3,3,3,3)
Item34 <- c(3,3,3,3,3,3,3,3,3,3,3,3)
Item35 <- c(3,3,3,3,3,3,3,3,3,3,3,3)
Item36 <- c(2,2,2,2,2,2,2,2,2,2,2,2)
Item37 <- c(2,2,1,3,3,1,2,3,3,2,3,1)
Item38 <- c(1,4,4,4,NA,4,4,4,1,4,4,1)
Item39 <- c(3,3,3,3,3,3,3,3,3,3,3,3)
Item40 <- c(3,3,4,3,3,3,3,3,3,3,3,3)
Item41 <- c(2,1,2,2,2,4,4,2,2,4,4,2)
exam <- data.frame(Item1, Item2, Item3, Item4, Item5, Item6, Item7, Item8, Item9, Item10, Item11,Item12, Item13, Item14, Item15, Item16, Item17, Item18, Item19, Item20, Item21, Item22, Item23, Item24,Item25, Item26, Item27, Item28, Item29, Item30, Item31, Item32, Item33, Item34, Item35, Item36, Item37, Item38, Item39, Item40, Item41)
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
saveRDS(exam, "exam.rds")
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
#saveRDS(exam, "exam.rds")
#bring back the simulated dat from an .rds file
exam <- readRDS("exam.rds")
View(exam)
exam.keys <- c(1,4,1,2,1,1,3,2,1,3,1,2,2,2,2,2,1,3,4,1,4,3,3,3,1,4,4,1,1,2,1,1,3,3,3,2,2,1,3,3,4)
results <- psych::score.multiple.choice(exam.keys, exam, score = TRUE, short = FALSE, skew = TRUE)
results
#short=FALSE allows us to produce scores; we will use these later in some IRT analyses
#names(results)
-2.65/0.08
-.30/.15
#irt.responses(scores$scores, exam[5], breaks = 2)
psych::irt.responses(results$scores, exam[5], breaks = 2)
psych::irt.responses(results$scores, exam[11], breaks = 2)
psych::irt.responses(results$scores, exam[19], breaks = 2)
psych::irt.responses(results$scores, exam[21], breaks = 2)
psych::irt.responses(results$scores, exam[37], breaks = 2)
psych::irt.responses(results$scores, exam[38], breaks = 2)
set.seed(210827)
SzyT1 <- matrix(c(.88, .73, .73, -.07,-.02, .16, -.03, .10, -.04, .86, .76, .71), ncol=2) #primary factor loadings for the two factors
rownames(SzyT1) <- c("cold", "unresponsive", "supportiveNR", "negative", "heterosexism", "harassed") #variable names for the six items
#rownames(Szyf2) <- paste("V", seq(1:6), sep=" ") #prior code I replaced with above
colnames(SzyT1) <- c("F1", "F2")
SzyCorMat <- SzyT1 %*% t(SzyT1) #create the correlation matrix
diag(SzyCorMat) <- 1
set.seed(210827)
SzyT1 <- matrix(c(.88, .73, .73, -.07,-.02, .16, -.03, .10, -.04, .86, .76, .71), ncol=2) #primary factor loadings for the two factors
rownames(SzyT1) <- c("cold", "unresponsive", "supportiveNR", "negative", "heterosexism", "harassed") #variable names for the six items
#rownames(Szyf2) <- paste("V", seq(1:6), sep=" ") #prior code I replaced with above
colnames(SzyT1) <- c("F1", "F2")
SzyCorMat <- SzyT1 %*% t(SzyT1) #create the correlation matrix
diag(SzyCorMat) <- 1
View(SzyCorMat)
SzyM <- c(2.31, 3.11, 2.40, 3.18, 4.44, 3.02) #item means
SzySD <- c(1.35, 1.46, 1.26, 1.60, 1.75, 1.50) #item standard deviations; turns out we won't need these since we have a covariance matrix
SzyCovMat <- SzySD %*% t(SzySD) * SzyCorMat #creates a covariance matrix from the correlation matrix
View(SzyCovMat)
#SzyCovMat #displays the covariance matrix
#library(MASS)
dfSzyT1 <- as.data.frame(round(MASS::mvrnorm(n=646, mu = SzyM, Sigma = SzyCovMat, empirical = TRUE),0)) #creates the item level data from the sample size, mean, and covariance matrix
View(dfSzyT1)
View(dfSzyT1)
dfSzyT1[dfSzyT1>7]<-7 #restricts the upperbound of all variables to be 7 or less
dfSzyT1[dfSzyT1<1]<-1 #resticts the lowerbound of all variable to be 1 or greater
View(dfSzyT1)
View(dfSzyT1)
dfSzyT1 <- dfSzyT1 %>% dplyr::mutate(ID = row_number()) #add ID to each row
library(tidyverse)
dfSzyT1 <- dfSzyT1 %>% dplyr::mutate(ID = row_number()) #add ID to each row
View(dfSzyT1)
dfSzyT1 <- dfSzyT1%>%dplyr::select(ID, everything())#moving the ID number to the first column; requires
View(dfSzyT1)
dfSzyT1<- dfSzyT1 %>%
dplyr::mutate(supportive = 8 - supportiveNR) #because the original scale had 1 reversed item, I reversed it so that we can re-reverse it for practice; reversing means subracting from 1 greater than the scaling of the scale (in our case 1 to 7, so
View(dfSzyT1)
dfSzyT1 <- dfSzyT1%>%
dplyr::select(-supportiveNR)
View(dfSzyT1)
#write the simulated data  as a .csv
write.table(dfSzyT1, file="dfSzyT1.csv", sep=",", col.names=TRUE, row.names=FALSE)
#write the simulated data  as a .csv
#write.table(dfSzyT1, file="dfSzyT1.csv", sep=",", col.names=TRUE, row.names=FALSE)
#bring back the simulated dat from a .csv file
dfSzyT1 <- read.csv ("dfSzyT1.csv", header = TRUE)
View(dfSzyT1)
set.seed(210827)
SzyT1 <- matrix(c(.88, .73, .73, -.07,-.02, .16, -.03, .10, -.04, .86, .76, .71), ncol=2) #primary factor loadings for the two factors
rownames(SzyT1) <- c("cold", "unresponsive", "supportiveNR", "negative", "heterosexism", "harassed") #variable names for the six items
#rownames(Szyf2) <- paste("V", seq(1:6), sep=" ") #prior code I replaced with above
colnames(SzyT1) <- c("F1", "F2")
SzyCorMat <- SzyT1 %*% t(SzyT1) #create the correlation matrix
diag(SzyCorMat) <- 1
#SzyCorMat #prints the correlation matrix
SzyM <- c(2.31, 3.11, 2.40, 3.18, 4.44, 3.02) #item means
SzySD <- c(1.35, 1.46, 1.26, 1.60, 1.75, 1.50) #item standard deviations; turns out we won't need these since we have a covariance matrix
SzyCovMat <- SzySD %*% t(SzySD) * SzyCorMat #creates a covariance matrix from the correlation matrix
#SzyCovMat #displays the covariance matrix
dfSzyT1 <- as.data.frame(round(MASS::mvrnorm(n=646, mu = SzyM, Sigma = SzyCovMat, empirical = TRUE),0)) #creates the item level data from the sample size, mean, and covariance matrix
dfSzyT1[dfSzyT1>7]<-7 #restricts the upperbound of all variables to be 7 or less
dfSzyT1[dfSzyT1<1]<-1 #resticts the lowerbound of all variable to be 1 or greater
#colMeans(dfSzy) #displays column means
library(tidyverse)
dfSzyT1 <- dfSzyT1 %>% dplyr::mutate(ID = row_number()) #add ID to each row
dfSzyT1 <- dfSzyT1%>%dplyr::select(ID, everything())#moving the ID number to the first column; requires
dfSzyT1<- dfSzyT1 %>%
dplyr::mutate(supportive = 8 - supportiveNR) #because the original scale had 1 reversed item, I reversed it so that we can re-reverse it for practice; reversing means subracting from 1 greater than the scaling of the scale (in our case 1 to 7, so we subtract from 8)
dfSzyT1 <- dfSzyT1%>%
dplyr::select(-supportiveNR)
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
saveRDS(dfSzyT1, "dfSzyT1.rds")
#to save the df as an .rds (think "R object") file on your computer; it should save in the same file as the .rmd file you are working with
#saveRDS(dfSzyT1, "dfSzyT1.rds")
#bring back the simulated dat from an .rds file
dfSzyT1 <- readRDS("dfSzyT1.rds")
View(dfSzyT1)
psych::describe(dfSzyT1)
dfSzyT1<- dfSzyT1 %>%
dplyr::mutate(unsupportive = 8 - supportive) #scaling 1 to 7; so we subtract from 8
psych::describe(dfSzyT1)
View(dfSzyT1)
LGBTQvars <- c('cold', 'unresponsive', 'negative', 'heterosexism', 'harassed', 'unsupportive')
ResponseVars <- c('cold', 'unresponsive', 'unsupportive')
Stigmavars <- c('negative', 'heterosexism', 'harassed')
dfSzyT1$TotalT1 <- sjstats::mean_n(dfSzyT1[,LGBTQvars], .80)#will create the mean for each individual if 80% of variables are present (this means there must be at least 5 of 6)
dfSzyT1$ResponseT1 <- sjstats::mean_n(dfSzyT1[,ResponseVars], .80)#will create the mean for each individual if 80% of variables are present (in this case all variables must be present)
dfSzyT1$StigmaT1 <- sjstats::mean_n(dfSzyT1[,Stigmavars], .80)#will create the mean for each individual if 80% of variables are present (in this case all variables must be present)
LGBTQT1 <- dplyr::select(dfSzyT1, cold, unresponsive, unsupportive, negative, heterosexism, harassed)
ResponseT1 <- dplyr::select(dfSzyT1, cold, unresponsive, unsupportive)
StigmaT1 <- dplyr::select(dfSzyT1, negative, heterosexism, harassed)
View(LGBTQT1)
View(ResponseT1)
View(StigmaT1)
psych::alpha(LGBTQT1)
View(LGBTQT1)
minus_unresponsive <- dplyr::select(dfSzyT1, cold,  unsupportive, negative, heterosexism, harassed)
View(minus_unresponsive)
psych::alpha(minus_unresponsive)
psych::alpha(ResponseT1)
psych::alpha(StigmaT1)
View(dfSzyT1)
View(dfSzyT1)
apaTables::apa.cor.table(dfSzyT1[c("cold", "unresponsive", "unsupportive", "StigmaT1")])
apaTables::apa.cor.table(dfSzyT1[c("negative", "heterosexism", "harassed", "ResponseT1")])
View(dfSzyT1)
apaTables::apa.cor.table(dfSzyT1[c("cold", "unresponsive", "unsupportive", "StigmaT1")])
apaTables::apa.cor.table(dfSzyT1[c("negative", "heterosexism", "harassed", "ResponseT1")])
