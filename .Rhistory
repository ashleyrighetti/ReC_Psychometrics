citr:::insert_citation()
library(tidyverse)
dfSzy <- as.data.frame(dfSzy) #converts to a df so we can use in R
dfSzy<- dfSzy %>%
mutate(unsupportive = 7 - supportive)
psych::describe(dfSzy)
LGBTQ <- select(dfSzy, cold, unresponsive, unsupportive, negative, heterosexism, harassed)
View(LGBTQ)
LGBTQ <- select(dfSzy, cold, unresponsive, unsupportive, negative, heterosexism, harassed)
Response <- select(dfSzy, cold, unresponsive, unsupportive)
Stigma <- select(dfSzy, negative, heterosexism, harassed)
View(Stigma)
View(Response)
View(LGBTQ)
citr:::insert_citation()
sp <- splitHalf (LGBTQ, raw = TRUE, brute = TRUE)
sp <- psych::splitHalf (LGBTQ, raw = TRUE, brute = TRUE)
sp #show the results of the analysis
hist(sp$raw,breaks = 101, xlab = "Split half reliability",
main = "Split half reliabilities of 6 LGBTQ items")
split <- psych::splitHalf (LGBTQ, raw = TRUE, brute = TRUE)
split #show the results of the analysis
hist(split$raw,breaks = 101, xlab = "Split half reliability",
main = "Split half reliabilities of 6 LGBTQ items")
splitRx <- psych::splitHalf (Response, raw = TRUE, brute = TRUE)
splitRX #show the results of the analysis
splitRx <- psych::splitHalf (Response, raw = TRUE, brute = TRUE)
splitRx #show the results of the analysis
hist(splitRx$raw,breaks = 101, xlab = "Split half reliability",
mainRx = "Split half reliabilities of 3 items of the College Response subscale")
View(LGBTQ)
set.seed(210827)
Szyf2 <- matrix(c(.88, .73, .73, rep(0,6), .86, .76, .71), ncol=2) #primary factor loadings for the two factors
rownames(Szyf2) <- c("cold", "unresponsive", "unsupportive", "negative", "heterosexism", "harassed") #variable names for the six items
#rownames(Szyf2) <- paste("V", seq(1:6), sep=" ") #prior code I replaced with above
colnames(Szyf2) <- c("F1", "F2")
SzyCorMat <- Szyf2 %*% t(Szyf2) #create the correlation matrix
diag(SzyCorMat) <- 1
#SzyCorMat #prints the correlation matrix
SzyM <- c(2.31, 3.11, 2.40, 3.18, 4.44, 3.02) #item means
SzySD <- c(1.35, 1.46, 1.26, 1.60, 1.75, 1.50) #item standard deviations; turns out we won't need these since we have a covariance matrix
SzyCovMat <- SzySD %*% t(SzySD) * SzyCorMat #creates a covariance matrix from the correlation matrix
#SzyCovMat #displays the covariance matrix
library(MASS)
dfSzy <- round(mvrnorm(n=646, mu = SzyM, Sigma = SzyCovMat, empirical = TRUE),0) #creates the item level data from the sample size, mean, and covariance matrix
dfSzy[dfSzy>7]<-7 #restricts the upperbound of all variables to be 7 or less
dfSzy[dfSzy<1]<-1 #resticts the lowerbound of all variable to be 1 or greater
#colMeans(dfSzy) #displays column means
library(tidyverse)
dfSzy <- as.data.frame(dfSzy) #converts to a df so we can use in R
dfSzy<- dfSzy %>%
mutate(supportive = 7 - unsupportive) #because the original scale had 1 reversed item, I reversed it so that we can re-reverse it for practice
psych::describe(dfSzy)
library(tidyverse)
dfSzy <- as.data.frame(dfSzy) #converts to a df so we can use in R
dfSzy<- dfSzy %>%
mutate(unsupportive = 7 - supportive)
psych::describe(dfSzy)
LGBTQ <- select(dfSzy, cold, unresponsive, unsupportive, negative, heterosexism, harassed)
Response <- select(dfSzy, cold, unresponsive, unsupportive)
Stigma <- select(dfSzy, negative, heterosexism, harassed)
split <- psych::splitHalf (LGBTQ, raw = TRUE, brute = TRUE)
split #show the results of the analysis
hist(split$raw,breaks = 101, xlab = "Split half reliability",
main = "Split half reliabilities of 6 LGBTQ items")
LGBTQ <- select(dfSzy, cold, unresponsive, unsupportive, negative, heterosexism, harassed)
Response <- select(dfSzy, cold, unresponsive, unsupportive)
Stigma <- select(dfSzy, negative, heterosexism, harassed)
split <- psych::splitHalf (LGBTQ, raw = TRUE, brute = TRUE)
split #show the results of the analysis
hist(split$raw,breaks = 101, xlab = "Split half reliability",
main = "Split half reliabilities of 6 LGBTQ items")
splitRx <- psych::splitHalf (Response, raw = TRUE, brute = TRUE)
splitRx #show the results of the analysis
hist(splitRx$raw,breaks = 101, xlab = "Split half reliability",
mainRx = "Split half reliabilities of 3 items of the College Response subscale")
splitSt <- psych::splitHalf (Stigma, raw = TRUE, brute = TRUE)
splitSt #show the results of the analysis
hist(splitRx$raw,breaks = 101, xlab = "Split half reliability",
mainSt = "Split half reliabilities of 3 items of the Stigma subscale")
View(LGBTQ)
LGBTQ <- select(dfSzy, cold, unresponsive, supportive, negative, heterosexism, harassed)
Response <- select(dfSzy, cold, unresponsive, unsupportive)
Stigma <- select(dfSzy, negative, heterosexism, harassed)
split <- psych::splitHalf (LGBTQ, raw = TRUE, brute = TRUE)
split #show the results of the analysis
hist(split$raw,breaks = 101, xlab = "Split half reliability",
main = "Split half reliabilities of 6 LGBTQ items")
LGBTQ <- select(dfSzy, cold, unresponsive, unsupportive, negative, heterosexism, harassed)
Response <- select(dfSzy, cold, unresponsive, unsupportive)
Stigma <- select(dfSzy, negative, heterosexism, harassed)
split <- psych::splitHalf (LGBTQ, raw = TRUE, brute = TRUE)
split #show the results of the analysis
hist(split$raw,breaks = 101, xlab = "Split half reliability",
main = "Split half reliabilities of 6 LGBTQ items")
splitRx <- psych::splitHalf (Response, raw = TRUE, brute = TRUE)
splitRx #show the results of the analysis
hist(splitRx$raw,breaks = 101, xlab = "Split half reliability",
mainRx = "Split half reliabilities of 3 items of the College Response subscale")
splitSt <- psych::splitHalf (Stigma, raw = TRUE, brute = TRUE)
splitSt #show the results of the analysis
hist(splitRx$raw,breaks = 101, xlab = "Split half reliability",
mainSt = "Split half reliabilities of 3 items of the Stigma subscale")
alpha (LGBTQ)
psych::alpha (LGBTQ)
psych::alpha (LGBTQ)
psych::alpha(Response)
psych::alpha(Stigma)
psych::alpha(Response)
psych::alpha(Stigma)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
set.seed(210827)
Szyf2 <- matrix(c(.88, .73, .73, rep(0,6), .86, .76, .71), ncol=2) #primary factor loadings for the two factors
rownames(Szyf2) <- c("cold", "unresponsive", "unsupportive", "negative", "heterosexism", "harassed") #variable names for the six items
#rownames(Szyf2) <- paste("V", seq(1:6), sep=" ") #prior code I replaced with above
colnames(Szyf2) <- c("F1", "F2")
SzyCorMat <- Szyf2 %*% t(Szyf2) #create the correlation matrix
diag(SzyCorMat) <- 1
#SzyCorMat #prints the correlation matrix
SzyM <- c(2.31, 3.11, 2.40, 3.18, 4.44, 3.02) #item means
SzySD <- c(1.35, 1.46, 1.26, 1.60, 1.75, 1.50) #item standard deviations; turns out we won't need these since we have a covariance matrix
SzyCovMat <- SzySD %*% t(SzySD) * SzyCorMat #creates a covariance matrix from the correlation matrix
#SzyCovMat #displays the covariance matrix
library(MASS)
dfSzy <- round(mvrnorm(n=646, mu = SzyM, Sigma = SzyCovMat, empirical = TRUE),0) #creates the item level data from the sample size, mean, and covariance matrix
dfSzy[dfSzy>7]<-7 #restricts the upperbound of all variables to be 7 or less
dfSzy[dfSzy<1]<-1 #resticts the lowerbound of all variable to be 1 or greater
#colMeans(dfSzy) #displays column means
library(tidyverse)
dfSzy <- as.data.frame(dfSzy) #converts to a df so we can use in R
dfSzy<- dfSzy %>%
mutate(supportive = 7 - unsupportive) #because the original scale had 1 reversed item, I reversed it so that we can re-reverse it for practice
psych::describe(dfSzy)
set.seed(210827)
Szyf2 <- matrix(c(.88, .73, .73, rep(0,6), .86, .76, .71), ncol=2) #primary factor loadings for the two factors
rownames(Szyf2) <- c("cold", "unresponsive", "supportiveR", "negative", "heterosexism", "harassed") #variable names for the six items
#rownames(Szyf2) <- paste("V", seq(1:6), sep=" ") #prior code I replaced with above
colnames(Szyf2) <- c("F1", "F2")
SzyCorMat <- Szyf2 %*% t(Szyf2) #create the correlation matrix
diag(SzyCorMat) <- 1
#SzyCorMat #prints the correlation matrix
SzyM <- c(2.31, 3.11, 2.40, 3.18, 4.44, 3.02) #item means
SzySD <- c(1.35, 1.46, 1.26, 1.60, 1.75, 1.50) #item standard deviations; turns out we won't need these since we have a covariance matrix
SzyCovMat <- SzySD %*% t(SzySD) * SzyCorMat #creates a covariance matrix from the correlation matrix
#SzyCovMat #displays the covariance matrix
library(MASS)
dfSzy <- round(mvrnorm(n=646, mu = SzyM, Sigma = SzyCovMat, empirical = TRUE),0) #creates the item level data from the sample size, mean, and covariance matrix
dfSzy[dfSzy>7]<-7 #restricts the upperbound of all variables to be 7 or less
dfSzy[dfSzy<1]<-1 #resticts the lowerbound of all variable to be 1 or greater
#colMeans(dfSzy) #displays column means
library(tidyverse)
dfSzy <- as.data.frame(dfSzy) #converts to a df so we can use in R
dfSzy<- dfSzy %>%
mutate(supportive = 7 - supportiveR) #because the original scale had 1 reversed item, I reversed it so that we can re-reverse it for practice
psych::describe(dfSzy)
library(tidyverse)
dfSzy <- as.data.frame(dfSzy) #converts to a df so we can use in R
dfSzy<- dfSzy %>%
mutate(unsupportive = 7 - supportive)
psych::describe(dfSzy)
LGBTQ <- select(dfSzy, cold, unresponsive, unsupportive, negative, heterosexism, harassed)
Response <- select(dfSzy, cold, unresponsive, unsupportive)
Stigma <- select(dfSzy, negative, heterosexism, harassed)
split <- psych::splitHalf (LGBTQ, raw = TRUE, brute = TRUE)
split #show the results of the analysis
hist(split$raw,breaks = 101, xlab = "Split half reliability",
main = "Split half reliabilities of 6 LGBTQ items")
splitRx <- psych::splitHalf (Response, raw = TRUE, brute = TRUE)
splitRx #show the results of the analysis
hist(splitRx$raw,breaks = 101, xlab = "Split half reliability",
mainRx = "Split half reliabilities of 3 items of the College Response subscale")
splitRx <- psych::splitHalf (Response, raw = TRUE, brute = TRUE)
splitRx #show the results of the analysis
hist(splitRx$raw,breaks = 101, xlab = "Split half reliability",
mainRx = "Split half reliabilities of 3 items of the College Response subscale")
splitSt <- psych::splitHalf (Stigma, raw = TRUE, brute = TRUE)
splitSt #show the results of the analysis
hist(splitRx$raw,breaks = 101, xlab = "Split half reliability",
mainSt = "Split half reliabilities of 3 items of the Stigma subscale")
psych::alpha (LGBTQ)
psych::alpha(Response)
psych::alpha(Stigma)
omegaSem(LGBTQ)
psych::omegaSem(LGBTQ)
psych::omegaSem(LGBTQ, nfactors=1)
psych::omegaSem(LGBTQ, nfactors=2)
.56/.80
Rater1b <- c("exploration","exploration","exploration","exploration","exploration","exploration","insight","insight","insight","action","action","action" )
Rater2b <- c("exploration","exploration","exploration","exploration","exploration","insight","insight","insight","exploration","action","action","action" )
Rater3b <- c("exploration","exploration","exploration","exploration","exploration","exploration","exploration","insight","insight","insight","action","action" )
Rater4b <- c("exploration","exploration","exploration","exploration","exploration","exploration","exploration","exploration","insight","action","action","action" )
after_training <- data.frame(Rater1b, Rater2b, Rater3b, Rater4b)
psych::cohen.kappa(after_training)
Rater1 <- c(1, 1, 1, 4, 2, 3, 1, 3, 3, 5, 2 )
Rater2 <- c(1, 1, 2, 1, 4, 4, 4, 4, 5, 5, 3)
Rater3 <- c(3, 3, 3, 2, 3, 3, 6, 4, 4, 5, 3)
Rater4 <- c(3, 5, 4, 2, 3, 6, 6, 6, 5, 5, 4 )
Rater5 <- c(2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 4)
ICC_df <- data.frame(Rater1, Rater2, Rater3, Rater4, Rater5)
View(ICC_df)
Rater1 <- c(1, 1, 1, 4, 2, 3, 1, 3, 3, 5)
Rater2 <- c(1, 1, 2, 1, 4, 4, 4, 4, 5, 5)
Rater3 <- c(3, 3, 3, 2, 3, 3, 6, 4, 4, 5)
Rater4 <- c(3, 5, 4, 2, 3, 6, 6, 6, 5, 5)
Rater5 <- c(2, 3, 3, 3, 4, 4, 4, 4, 5, 5)
ICC_df <- data.frame(Rater1, Rater2, Rater3, Rater4, Rater5)
ICC_df (ICC_dat [1:10,1:5], lmer = TRUE) #find the ICCs for the 10 subjects and 5 judges
psych::ICC(ICC_df [1:10,1:5], lmer = TRUE) #find the ICCs for the 10 subjects and 5 judges
ICCresults <- psych::ICC(ICC_df [1:10,1:5], lmer = TRUE) #find the ICCs for the 10 subjects and 5 judges
summary(ICCresults)
ICCresults <- psych::ICC(ICC_df [1:10,1:5], lmer = TRUE) #find the ICCs for the 10 subjects and 5 judges
ICCresults
ICCresults <- psych::ICC(ICC_df [1:10,1:5], lmer = TRUE) #find the ICCs for the 10 subjects and 5 judges
ICCresults <- psych::ICC(ICC_df [1:10,1:5], lmer = TRUE) #find the ICCs for the 10 subjects and 5 judges
psych::ICC(ICC_df [1:10,1:5], lmer = TRUE) #find the ICCs for the 10 subjects and 5 judges
citr:::insert_citation()
#only have to run this ONCE to draw from the same Qualtrics account...but will need to get different token if you are changing between accounts
library(qualtRics)
#qualtrics_api_credentials(api_key = "mUgPMySYkiWpMFkwHale1QE5HNmh5LRUaA8d9PDg",
#base_url = "spupsych.az1.qualtrics.com", overwrite = TRUE, install = TRUE)
QTRX_df <-qualtRics::fetch_survey(surveyID = "SV_b2cClqAlLGQ6nLU", time_zone = NULL, verbose = FALSE, label=FALSE, convert=FALSE, force_request = TRUE, import_id = FALSE)
View(QTRX_df)
#only have to run this ONCE to draw from the same Qualtrics account...but will need to get different token if you are changing between accounts
library(qualtRics)
#qualtrics_api_credentials(api_key = "mUgPMySYkiWpMFkwHale1QE5HNmh5LRUaA8d9PDg",
#base_url = "spupsych.az1.qualtrics.com", overwrite = TRUE, install = TRUE)
QTRX_df <-qualtRics::fetch_survey(surveyID = "SV_b2cClqAlLGQ6nLU", time_zone = NULL, verbose = FALSE, label=FALSE, convert=FALSE, force_request = TRUE, import_id = FALSE)
climate_df <- QTRX_df%>%
select('Blst_1', 'Blst_2','Blst_3','Blst_4','Blst_5','Blst_6',
'nBSoC_1', 'nBSoC_2','nBSoC_3','nBSoC_4','nBSoC_5','nBSoC_6',
'INTst_1', 'INTst_2','INTst_3','INTst_4','INTst_5','INTst_6',
'wDIS_1', 'wDIS_2','wDIS_3','wDIS_4','wDIS_5','wDIS_6',
'LGBTQ_1', 'LGBTQ_2','LGBTQ_3','LGBTQ_4','LGBTQ_5','LGBTQ_6')
library(tidyverse)
library(tidyverse)
#only have to run this ONCE to draw from the same Qualtrics account...but will need to get different token if you are changing between accounts
library(qualtRics)
#qualtrics_api_credentials(api_key = "mUgPMySYkiWpMFkwHale1QE5HNmh5LRUaA8d9PDg",
#base_url = "spupsych.az1.qualtrics.com", overwrite = TRUE, install = TRUE)
QTRX_df <-qualtRics::fetch_survey(surveyID = "SV_b2cClqAlLGQ6nLU", time_zone = NULL, verbose = FALSE, label=FALSE, convert=FALSE, force_request = TRUE, import_id = FALSE)
climate_df <- QTRX_df%>%
select('Blst_1', 'Blst_2','Blst_3','Blst_4','Blst_5','Blst_6',
'nBSoC_1', 'nBSoC_2','nBSoC_3','nBSoC_4','nBSoC_5','nBSoC_6',
'INTst_1', 'INTst_2','INTst_3','INTst_4','INTst_5','INTst_6',
'wDIS_1', 'wDIS_2','wDIS_3','wDIS_4','wDIS_5','wDIS_6',
'LGBTQ_1', 'LGBTQ_2','LGBTQ_3','LGBTQ_4','LGBTQ_5','LGBTQ_6')
View(climate_df)
library(tidyverse)
#only have to run this ONCE to draw from the same Qualtrics account...but will need to get different token if you are changing between accounts
library(qualtRics)
#qualtrics_api_credentials(api_key = "mUgPMySYkiWpMFkwHale1QE5HNmh5LRUaA8d9PDg",
#base_url = "spupsych.az1.qualtrics.com", overwrite = TRUE, install = TRUE)
QTRX_df <-qualtRics::fetch_survey(surveyID = "SV_b2cClqAlLGQ6nLU", time_zone = NULL, verbose = FALSE, label=FALSE, convert=FALSE, force_request = TRUE, import_id = FALSE)
climate_df <- QTRX_df%>%
select('Blst_1', 'Blst_2','Blst_3','Blst_4','Blst_5','Blst_6',
'nBSoC_1', 'nBSoC_2','nBSoC_3','nBSoC_4','nBSoC_5','nBSoC_6',
'INTst_1', 'INTst_2','INTst_3','INTst_4','INTst_5','INTst_6',
'wDIS_1', 'wDIS_2','wDIS_3','wDIS_4','wDIS_5','wDIS_6',
'LGBTQ_1', 'LGBTQ_2','LGBTQ_3','LGBTQ_4','LGBTQ_5','LGBTQ_6')
#Item numbers are supported with the following items:
#_1 "My campus unit provides a supportive environment for ___ students"
#_2 "________ is visible in my campus unit"
#_3 "Negative attitudes toward persons who are ____ are openly expressed in my campus unit."
#_4 "My campus unit is unresponsive to the needs of ____ students."
#_5 "Students who are_____ are harassed in my campus unit."
#_6 "My campus unit is cold and uncaring toward ____ students."
#Item 1 on each subscale should be reverse coded.
#The College Response scale is composed of items 1, 4, 6,
#The Stigma scale is composed of items 2,3, 5
citr:::insert_citation()
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
#will install the package if not already installed
#if(!require(package)){install.packages("package")}
set.seed(210827)
SzyT1 <- matrix(c(.88, .73, .73, rep(0,6), .86, .76, .71), ncol=2) #primary factor loadings for the two factors
rownames(SzyT1) <- c("cold", "unresponsive", "supportiveNR", "negative", "heterosexism", "harassed") #variable names for the six items
#rownames(Szyf2) <- paste("V", seq(1:6), sep=" ") #prior code I replaced with above
colnames(SzyT1) <- c("F1", "F2")
SzyCorMat <- SzyT1 %*% t(SzyT1) #create the correlation matrix
diag(SzyCorMat) <- 1
#SzyCorMat #prints the correlation matrix
SzyM <- c(2.31, 3.11, 2.40, 3.18, 4.44, 3.02) #item means
SzySD <- c(1.35, 1.46, 1.26, 1.60, 1.75, 1.50) #item standard deviations; turns out we won't need these since we have a covariance matrix
SzyCovMat <- SzySD %*% t(SzySD) * SzyCorMat #creates a covariance matrix from the correlation matrix
#SzyCovMat #displays the covariance matrix
library(MASS)
dfSzyT1 <- round(mvrnorm(n=646, mu = SzyM, Sigma = SzyCovMat, empirical = TRUE),0) #creates the item level data from the sample size, mean, and covariance matrix
dfSzyT1[dfSzyT1>7]<-7 #restricts the upperbound of all variables to be 7 or less
dfSzyT1[dfSzyT1<1]<-1 #resticts the lowerbound of all variable to be 1 or greater
#colMeans(dfSzy) #displays column means
library(tidyverse)
dfSzyT1 <- as.data.frame(dfSzyT1) #converts to a df so we can use in R
library(dplyr)
dfSzyT1 <- dfSzyT1 %>% mutate(ID = row_number()) #add ID to each row
dfSzyT1 <- dfSzyT1%>%select(ID, everything())#moving the ID number to the first column; requires
dfSzyT1<- dfSzyT1 %>%
mutate(supportive = 7 - supportiveNR) #because the original scale had 1 reversed item, I reversed it so that we can re-reverse it for practice
dfSzyT1 <- dfSzyT1%>%
select(-supportiveNR)
psych::describe(dfSzyT1)
View(dfSzyT1)
library(tidyverse)
dfSzyT1 <- as.data.frame(dfSzyT1) #converts to a df so we can use in R
dfSzyT1<- dfSzyT1 %>%
mutate(unsupportive = 7 - supportive)
psych::describe(dfSzyT1)
LGBTQT1 <- select(dfSzyT1, cold, unresponsive, unsupportive, negative, heterosexism, harassed)
ResponseT1 <- select(dfSzyT1, cold, unresponsive, unsupportive)
StigmaT1 <- select(dfSzyT1, negative, heterosexism, harassed)
library(tidyverse)
dfSzyT1 <- as.data.frame(dfSzyT1) #converts to a df so we can use in R
dfSzyT1<- dfSzyT1 %>%
mutate(unsupportive = 7 - supportive)
psych::describe(dfSzyT1)
LGBTQvars <- c('cold', 'unresponsive', 'negative', 'heterosexism', 'harassed', 'unsupportive')
ResponseVars <- c('cold', 'unresponsive', 'unsupportive')
Stigmavars <- c('negative', 'heterosexism', 'harassed')
dfSzyT1$TotalT1 <- sjstats::mean_n(dfSzyT1[,LGBTQvars], .80)#will create the mean for each individual if 80% of variables are present (this means there must be at least 5 of 6)
dfSzyT1$ResponseT1 <- sjstats::mean_n(dfSzyT1[,ResponseVars], .80)#will create the mean for each individual if 80% of variables are present (in this case all variables must be present)
dfSzyT1$StigmaT1 <- sjstats::mean_n(dfSzyT1[,Stigmavars], .80)#will create the mean for each individual if 80% of variables are present (in this case all variables must be present)
View(LGBTQT1)
View(dfSzyT1)
psych::alpha(LGBTQT1)
minus_unresponsive <- select(dfSzyT1, cold,  unsupportive, negative, heterosexism, harassed)
alpha(minus_unresponsive)
View(minus_unresponsive)
psych::alpha(minus_unresponsive)
psych::alpha(ResponseT1])
psych::alpha(ResponseT1)
alpha(StigmaT1)
psych::alpha(StigmaT1)
#corr.test(coping_merged[c(1,3,5,7,9,14)])
psych::corr.test(dfSzyT1[c("cold", "unresponsive", "unsupportive", "StigmaT1")])
apaTables::apa.cor.table(dfSzyTa[c("cold", "unresponsive", "unsupportive", "StigmaT1")])
apaTables::apa.cor.table(dfSzyT1[c("cold", "unresponsive", "unsupportive", "StigmaT1")])
apaTables::apa.cor.table(dfSzyT1[c("cold", "unresponsive", "unsupportive", "ResponseT1")])
apaTables::apa.cor.table(dfSzyT1[c("negative", "heterosexism", "harassed", "ResponseT1")])
|Variables     |College Response |Stigma
|:-------------|:---------:|:--------:|
|cold          |**.68**    |.00
|unresponsive  |**.62**    |.00
|unsuportive   |**.60**    |.00
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
#will install the package if not already installed
#if(!require(package)){install.packages("package")}
set.seed(210827)
SzyT1 <- matrix(c(.88, .73, .73, -.07,-.02, .16, -.03, .10, -.04, .86, .76, .71), ncol=2) #primary factor loadings for the two factors
rownames(SzyT1) <- c("cold", "unresponsive", "supportiveNR", "negative", "heterosexism", "harassed") #variable names for the six items
#rownames(Szyf2) <- paste("V", seq(1:6), sep=" ") #prior code I replaced with above
colnames(SzyT1) <- c("F1", "F2")
SzyCorMat <- SzyT1 %*% t(SzyT1) #create the correlation matrix
diag(SzyCorMat) <- 1
#SzyCorMat #prints the correlation matrix
SzyM <- c(2.31, 3.11, 2.40, 3.18, 4.44, 3.02) #item means
SzySD <- c(1.35, 1.46, 1.26, 1.60, 1.75, 1.50) #item standard deviations; turns out we won't need these since we have a covariance matrix
SzyCovMat <- SzySD %*% t(SzySD) * SzyCorMat #creates a covariance matrix from the correlation matrix
#SzyCovMat #displays the covariance matrix
library(MASS)
dfSzyT1 <- round(mvrnorm(n=646, mu = SzyM, Sigma = SzyCovMat, empirical = TRUE),0) #creates the item level data from the sample size, mean, and covariance matrix
dfSzyT1[dfSzyT1>7]<-7 #restricts the upperbound of all variables to be 7 or less
dfSzyT1[dfSzyT1<1]<-1 #resticts the lowerbound of all variable to be 1 or greater
#colMeans(dfSzy) #displays column means
library(tidyverse)
dfSzyT1 <- as.data.frame(dfSzyT1) #converts to a df so we can use in R
library(dplyr)
dfSzyT1 <- dfSzyT1 %>% mutate(ID = row_number()) #add ID to each row
dfSzyT1 <- dfSzyT1%>%select(ID, everything())#moving the ID number to the first column; requires
dfSzyT1<- dfSzyT1 %>%
mutate(supportive = 7 - supportiveNR) #because the original scale had 1 reversed item, I reversed it so that we can re-reverse it for practice
dfSzyT1 <- dfSzyT1%>%
select(-supportiveNR)
psych::describe(dfSzyT1)
library(tidyverse)
dfSzyT1 <- as.data.frame(dfSzyT1) #converts to a df so we can use in R
dfSzyT1<- dfSzyT1 %>%
mutate(unsupportive = 7 - supportive)
psych::describe(dfSzyT1)
LGBTQvars <- c('cold', 'unresponsive', 'negative', 'heterosexism', 'harassed', 'unsupportive')
ResponseVars <- c('cold', 'unresponsive', 'unsupportive')
Stigmavars <- c('negative', 'heterosexism', 'harassed')
dfSzyT1$TotalT1 <- sjstats::mean_n(dfSzyT1[,LGBTQvars], .80)#will create the mean for each individual if 80% of variables are present (this means there must be at least 5 of 6)
dfSzyT1$ResponseT1 <- sjstats::mean_n(dfSzyT1[,ResponseVars], .80)#will create the mean for each individual if 80% of variables are present (in this case all variables must be present)
dfSzyT1$StigmaT1 <- sjstats::mean_n(dfSzyT1[,Stigmavars], .80)#will create the mean for each individual if 80% of variables are present (in this case all variables must be present)
LGBTQT1 <- select(dfSzyT1, cold, unresponsive, unsupportive, negative, heterosexism, harassed)
ResponseT1 <- select(dfSzyT1, cold, unresponsive, unsupportive)
StigmaT1 <- select(dfSzyT1, negative, heterosexism, harassed)
psych::alpha(LGBTQT1)
minus_unresponsive <- select(dfSzyT1, cold,  unsupportive, negative, heterosexism, harassed)
psych::alpha(minus_unresponsive)
psych::alpha(ResponseT1)
psych::alpha(StigmaT1)
apaTables::apa.cor.table(dfSzyT1[c("cold", "unresponsive", "unsupportive", "StigmaT1")])
apaTables::apa.cor.table(dfSzyT1[c("negative", "heterosexism", "harassed", "ResponseT1")])
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
set.seed(210827)
SzyT1 <- matrix(c(.88, .73, .73, -.07,-.02, .16, -.03, .10, -.04, .86, .76, .71), ncol=2) #primary factor loadings for the two factors
rownames(SzyT1) <- c("cold", "unresponsive", "supportiveNR", "negative", "heterosexism", "harassed") #variable names for the six items
#rownames(Szyf2) <- paste("V", seq(1:6), sep=" ") #prior code I replaced with above
colnames(SzyT1) <- c("F1", "F2")
SzyCorMat <- SzyT1 %*% t(SzyT1) #create the correlation matrix
diag(SzyCorMat) <- 1
#SzyCorMat #prints the correlation matrix
SzyM <- c(2.31, 3.11, 2.40, 3.18, 4.44, 3.02) #item means
SzySD <- c(1.35, 1.46, 1.26, 1.60, 1.75, 1.50) #item standard deviations; turns out we won't need these since we have a covariance matrix
SzyCovMat <- SzySD %*% t(SzySD) * SzyCorMat #creates a covariance matrix from the correlation matrix
#SzyCovMat #displays the covariance matrix
library(MASS)
dfSzyT1 <- round(mvrnorm(n=646, mu = SzyM, Sigma = SzyCovMat, empirical = TRUE),0) #creates the item level data from the sample size, mean, and covariance matrix
dfSzyT1[dfSzyT1>7]<-7 #restricts the upperbound of all variables to be 7 or less
dfSzyT1[dfSzyT1<1]<-1 #resticts the lowerbound of all variable to be 1 or greater
#colMeans(dfSzy) #displays column means
library(tidyverse)
dfSzyT1 <- as.data.frame(dfSzyT1) #converts to a df so we can use in R
library(dplyr)
dfSzyT1 <- dfSzyT1 %>% mutate(ID = row_number()) #add ID to each row
dfSzyT1 <- dfSzyT1%>%select(ID, everything())#moving the ID number to the first column; requires
dfSzyT1<- dfSzyT1 %>%
mutate(supportive = 7 - supportiveNR) #because the original scale had 1 reversed item, I reversed it so that we can re-reverse it for practice
dfSzyT1 <- dfSzyT1%>%
select(-supportiveNR)
psych::describe(dfSzyT1)
library(tidyverse)
dfSzyT1 <- as.data.frame(dfSzyT1) #converts to a df so we can use in R
dfSzyT1<- dfSzyT1 %>%
mutate(unsupportive = 7 - supportive)
psych::describe(dfSzyT1)
LGBTQT1 <- select(dfSzyT1, cold, unresponsive, unsupportive, negative, heterosexism, harassed)
ResponseT1 <- select(dfSzyT1, cold, unresponsive, unsupportive)
StigmaT1 <- select(dfSzyT1, negative, heterosexism, harassed)
split <- psych::splitHalf (LGBTQT1, raw = TRUE, brute = TRUE)
split #show the results of the analysis
hist(split$raw,breaks = 101, xlab = "Split half reliability",
main = "Split half reliabilities of 6 LGBTQ items")
splitRx <- psych::splitHalf (ResponseT1, raw = TRUE, brute = TRUE)
splitRx #show the results of the analysis
hist(splitRx$raw,breaks = 101, xlab = "Split half reliability",
main = "Split half reliabilities of 3 items of the College Response subscale")
splitSt <- psych::splitHalf (StigmaT1, raw = TRUE, brute = TRUE)
splitSt #show the results of the analysis
hist(splitRx$raw,breaks = 101, xlab = "Split half reliability",
main = "Split half reliabilities of 3 items of the Stigma subscale")
psych::alpha (LGBTQT1)
psych::alpha(ResponseT1)
psych::alpha(StigmaT1)
psych::omegaSem(LGBTQT1, nfactors=2)
.37/.73
set.seed(210829)
SzyT2 <- matrix(c(.85, .71, .75, -.06,-.03, .18, -.04, .13, -.05, .87, .75, .70), ncol=2) #primary factor loadings for the two factors
rownames(SzyT2) <- c("cold", "unresponsive", "supportiveNR", "negative", "heterosexism", "harassed") #variable names for the six items
#rownames(Szyf2) <- paste("V", seq(1:6), sep=" ") #prior code I replaced with above
colnames(SzyT2) <- c("F1", "F2")
SzyCorMat <- SzyT2 %*% t(SzyT2) #create the correlation matrix
diag(SzyCorMat) <- 1
#SzyCorMat #prints the correlation matrix
SzyM <- c(2.30, 3.12, 2.39, 3.24, 4.21, 3.47) #item means
SzySD <- c(1.35, 1.46, 1.26, 1.60, 1.75, 1.50) #item standard deviations; turns out we won't need these since we have a covariance matrix
SzyCovMat <- SzySD %*% t(SzySD) * SzyCorMat #creates a covariance matrix from the correlation matrix
#SzyCovMat #displays the covariance matrix
library(MASS)
dfSzyT2 <- round(mvrnorm(n=646, mu = SzyM, Sigma = SzyCovMat, empirical = TRUE),0) #creates the item level data from the sample size, mean, and covariance matrix
dfSzyT2[dfSzyT2>7]<-7 #restricts the upperbound of all variables to be 7 or less
dfSzyT2[dfSzyT2<1]<-1 #resticts the lowerbound of all variable to be 1 or greater
#colMeans(dfSzy) #displays column means
library(tidyverse)
dfSzyT2 <- as.data.frame(dfSzyT2) #converts to a df so we can use in R
library(dplyr)
dfSzyT2 <- dfSzyT2 %>% mutate(ID = row_number()) #add ID to each row
dfSzyT2 <- dfSzyT2%>%select(ID, everything())#moving the ID number to the first column; requires
dfSzyT2<- dfSzyT2 %>%
mutate(supportive = 7 - supportiveNR) #because the original scale had 1 reversed item, I reversed it so that we can re-reverse it for practice
dfSzyT2 <- dfSzyT2%>%
select(-supportiveNR)
dfSzyT2<- dfSzyT2 %>%
mutate(unsupportive = 7 - supportive)
LGBTQvars <- c('cold', 'unresponsive', 'negative', 'heterosexism', 'harassed', 'unsupportive')
ResponseVars <- c('cold', 'unresponsive', 'unsupportive')
Stigmavars <- c('negative', 'heterosexism', 'harassed')
dfSzyT1$TotalT1 <- sjstats::mean_n(dfSzyT1[,LGBTQvars], .80)#will create the mean for each individual if 80% of variables are present (this means there must be at least 5 of 6)
dfSzyT1$ResponseT1 <- sjstats::mean_n(dfSzyT1[,ResponseVars], .80)#will create the mean for each individual if 80% of variables are present (in this case all variables must be present)
dfSzyT1$StigmaT1 <- sjstats::mean_n(dfSzyT1[,Stigmavars], .80)#will create the mean for each individual if 80% of variables are present (in this case all variables must be present)
SimCor_mu <- c(3.13, 2.68, 3.58, 3.16, 2.66, 2.76)
SimCor_sd <- c(0.82, 1.04, 1.26, 0.83, 1.05, .99)
simCor <- matrix (c(1,	0.64,	0.77,	0.44,	0.33,	0.29,
0.64,	1,	0.53,	0.35,	0.46,	0.34,
0.77,	0.53,	1,	0.27,	0.4,	0.47,
0.44,	0.35,	0.27,	1,	0.63,	0.62,
0.33,	0.46,	0.4,	0.63,	1,	0.57,
0.29,	0.34,	0.47,	0.62,	0.57,	1),
ncol = 6)
scovMat <- SimCor_sd %*% t(SimCor_sd)*simCor
set.seed(210829)
retest_df <- MASS::mvrnorm(n = 646, mu = SimCor_mu, Sigma = scovMat, empirical = TRUE)
colnames(retest_df) <- c("TotalT1", "ResponseT1", "StigmaT1", "TotalT2", "ResponseT2", "StigmaT2")
retest_df  <- as.data.frame(retest_df) #converts to a df so we can use in R
library(dplyr)
retest_df <- retest_df %>% mutate(ID = row_number()) #add ID to each row
retest_df <- retest_df %>%select(ID, everything())#moving the ID number to the first column; requires
retest_df2 <- retest_df %>%
select (c(-ID))
apaTables::apa.cor.table(data = retest_df2, landscape=TRUE, table.number = 1, filename="Table_1_Retest.doc")
apaTables::apa.cor.table(dfSzyT1[c("cold", "unresponsive", "unsupportive", "StigmaT1")])
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(comment = NA) #keeps out the hashtags in the knits
options(scipen=999)#eliminates scientific notation
